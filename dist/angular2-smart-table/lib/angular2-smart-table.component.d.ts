import { EventEmitter, OnChanges, OnDestroy, SimpleChange } from '@angular/core';
import { Subscription } from 'rxjs';
import { DataSet } from './lib/data-set/data-set';
import { Row } from './lib/data-set/row';
import { DataSource, DataSourceChangeEvent } from './lib/data-source/data-source';
import { Grid } from './lib/grid';
import { IColumn, Settings } from './lib/settings';
import { CreateCancelEvent, CreateConfirmEvent, CreateEvent, CustomActionEvent, DeleteConfirmEvent, DeleteEvent, EditCancelEvent, EditConfirmEvent, EditEvent, RowSelectionEvent } from './lib/events';
import * as i0 from "@angular/core";
export declare class Angular2SmartTableComponent implements OnChanges, OnDestroy {
    source: any;
    settings: Settings;
    rowSelect: EventEmitter<RowSelectionEvent>;
    userRowSelect: EventEmitter<RowSelectionEvent>;
    delete: EventEmitter<DeleteEvent>;
    edit: EventEmitter<EditEvent>;
    create: EventEmitter<CreateEvent>;
    custom: EventEmitter<CustomActionEvent>;
    deleteConfirm: EventEmitter<DeleteConfirmEvent>;
    editConfirm: EventEmitter<EditConfirmEvent>;
    editCancel: EventEmitter<EditCancelEvent>;
    createConfirm: EventEmitter<CreateConfirmEvent>;
    createCancel: EventEmitter<CreateCancelEvent>;
    rowHover: EventEmitter<any>;
    afterGridInit: EventEmitter<DataSet>;
    dataChangeSubscription?: Subscription;
    tableClass: string;
    tableId: string;
    perPageSelect: number[];
    perPageSelectLabel: string;
    isHideHeader: boolean;
    isHideSubHeader: boolean;
    isPagerDisplay: boolean;
    rowClassFunction: Function;
    grid: Grid;
    defaultSettings: Settings;
    isAllSelected: boolean;
    private onSelectRowSubscription;
    private onDeselectRowSubscription;
    private destroyed$;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    selectRow(index: number, switchPageToSelectedRowPage?: boolean): void;
    onEditRowSelect(row: Row): void;
    onUserSelectRow(row: Row): void;
    onRowHover(row: Row): void;
    onMultipleSelectRow(row: Row): void;
    onSelectAllRows(): Promise<void>;
    onExpandRow(row: Row): void;
    initGrid(): void;
    prepareSource(): DataSource;
    processDataChange(changes: DataSourceChangeEvent): void;
    prepareSettings(): Settings;
    getNotVisibleColumns(): Array<IColumn>;
    onShowHeader(columnId: string): void;
    onHideHeader(columnId: string): void;
    private createRowSelectionEvent;
    private emitUserSelectRow;
    private emitSelectRow;
    private isIndexOutOfRange;
    private subscribeToOnSelectRow;
    static ɵfac: i0.ɵɵFactoryDeclaration<Angular2SmartTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Angular2SmartTableComponent, "angular2-smart-table", never, { "source": "source"; "settings": "settings"; }, { "rowSelect": "rowSelect"; "userRowSelect": "userRowSelect"; "delete": "delete"; "edit": "edit"; "create": "create"; "custom": "custom"; "deleteConfirm": "deleteConfirm"; "editConfirm": "editConfirm"; "editCancel": "editCancel"; "createConfirm": "createConfirm"; "createCancel": "createCancel"; "rowHover": "rowHover"; "afterGridInit": "afterGridInit"; }, never, never>;
}
