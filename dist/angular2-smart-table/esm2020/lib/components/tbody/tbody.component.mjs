import { Component, EventEmitter, Input, Output, ViewChildren, ViewContainerRef } from '@angular/core';
import { delay } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "./cells/custom.component";
import * as i2 from "./cells/expand.component";
import * as i3 from "./cells/edit-delete.component";
import * as i4 from "./cells/save-cancel.component";
import * as i5 from "../cell/cell.component";
import * as i6 from "@angular/common";
import * as i7 from "@angular/forms";
export class NgxSmartTableTbodyComponent {
    constructor() {
        this.edit = new EventEmitter();
        this.delete = new EventEmitter();
        this.custom = new EventEmitter();
        this.userSelectRow = new EventEmitter();
        this.editRowSelect = new EventEmitter();
        this.multipleSelectRow = new EventEmitter();
        this.rowHover = new EventEmitter();
        this.onExpandRow = new EventEmitter();
        this.hasChildComponent = false;
    }
    ngAfterViewInit() {
        let cmp = this.getExpandedRowComponentFromSettings();
        if (cmp && !this.expandedRowComponent) {
            this.expandedRowChild.forEach(c => c.clear());
            this.hasChildComponent = true;
            this.createCustomComponent();
        }
    }
    ngOnDestroy() {
        if (this.expandedRowComponent)
            this.expandedRowComponent.destroy();
    }
    getExpandedRowComponentFromSettings() {
        return this.grid.settings.expand?.component ?? this.grid.settings.expandedRowComponent;
    }
    createCustomComponent() {
        let cmp = this.getExpandedRowComponentFromSettings();
        if (cmp) {
            this.expandedRowChild.changes
                .pipe(delay(0))
                .subscribe((list) => {
                if (list.length) {
                    this.expandedRowComponent = list.first.createComponent(cmp);
                    Object.assign(this.expandedRowComponent.instance, this.grid.dataSet.expandRow, {
                        rowData: this.grid.dataSet.getExpandedRow().getData(),
                    });
                }
            });
        }
    }
    get tableColumnsCount() {
        const actionColumn = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;
        const selectColumn = this.isMultiSelectVisible ? 1 : 0;
        return this.grid.getColumns().length + actionColumn + selectColumn;
    }
    ngOnChanges() {
        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();
        this.showActionColumnLeft = this.grid.showActionColumn('left');
        this.mode = this.grid.getSetting('mode');
        this.editInputClass = this.grid.getSetting('edit.inputClass');
        this.showActionColumnRight = this.grid.showActionColumn('right');
        this.isActionAdd = this.grid.getSetting('actions.add');
        this.isActionEdit = this.grid.getSetting('actions.edit');
        this.isActionDelete = this.grid.getSetting('actions.delete');
        this.noDataMessage = this.grid.getSetting('noDataMessage');
    }
    getVisibleCells(cells) {
        return (cells || []).filter((cell) => !cell.getColumn().hide);
    }
    onExpandRowClick(row) {
        this.onExpandRow.emit(row);
    }
}
NgxSmartTableTbodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: NgxSmartTableTbodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NgxSmartTableTbodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: NgxSmartTableTbodyComponent, selector: "[angular2-st-tbody]", inputs: { grid: "grid", source: "source", deleteConfirm: "deleteConfirm", editConfirm: "editConfirm", editCancel: "editCancel", rowClassFunction: "rowClassFunction" }, outputs: { edit: "edit", delete: "delete", custom: "custom", userSelectRow: "userSelectRow", editRowSelect: "editRowSelect", multipleSelectRow: "multipleSelectRow", rowHover: "rowHover", onExpandRow: "onExpandRow" }, viewQueries: [{ propertyName: "expandedRowChild", predicate: ["expandedRowChild"], descendants: true, read: ViewContainerRef }], usesOnChanges: true, ngImport: i0, template: "<ng-container  *ngFor=\"let row of grid.getRows()\">\n  <tr (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"angular2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\n    <td *ngIf=\"isMultiSelectVisible\" class=\"angular2-smart-actions angular2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\n      <input type=\"checkbox\" class=\"form-check-input\" [ngModel]=\"row.isSelected\">\n    </td>\n    <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"angular2-smart-actions\">\n\n      <angular2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\">\n      </angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\"\n                                [row]=\"row\"\n                                [source]=\"source\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n    <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n    <td *ngFor=\"let cell of getVisibleCells(row.cells)\">\n      <angular2-smart-table-cell [cell]=\"cell\"\n                            [grid]=\"grid\"\n                            [row]=\"row\"\n                            [isNew]=\"false\"\n                            [mode]=\"mode\"\n                            [editConfirm]=\"editConfirm\"\n                            [editCancel]=\"editCancel\"\n                            [inputClass]=\"editInputClass\"\n                            [isInEditing]=\"row.isInEditing\">\n      </angular2-smart-table-cell>\n    </td>\n\n    <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n\n    <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"angular2-smart-actions\">\n      <angular2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                [row]=\"row\"\n                                [source]=\"source\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n  </tr>\n  <tr class=\"angular2-smart-row angular2-smart-row-detail\" *ngIf=\"row.isExpanded\">\n    <td [attr.colspan]=\"tableColumnsCount\" class=\"angular2-smart-column-expandedDetail\">\n      <ng-template #expandedRowChild ></ng-template>\n    </td>\n  </tr>\n</ng-container>\n<tr *ngIf=\"grid.getRows().length == 0\">\n  <td [attr.colspan]=\"tableColumnsCount\">\n    {{ noDataMessage }}\n  </td>\n</tr>\n", styles: [":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-st-tbody-expand a:first-child{margin-right:.25rem}\n"], components: [{ type: i1.TbodyCustomComponent, selector: "angular2-st-tbody-custom", inputs: ["grid", "row", "source"], outputs: ["custom"] }, { type: i2.TbodyExpandRowComponent, selector: "angular2-st-tbody-expand", inputs: ["grid", "row"], outputs: ["onExpandRow"] }, { type: i3.TbodyEditDeleteComponent, selector: "angular2-st-tbody-edit-delete", inputs: ["grid", "row", "source", "deleteConfirm"], outputs: ["edit", "delete", "editRowSelect"] }, { type: i4.TbodySaveCancelComponent, selector: "angular2-st-tbody-create-cancel", inputs: ["grid", "row", "editConfirm", "editCancel"] }, { type: i5.CellComponent, selector: "angular2-smart-table-cell", inputs: ["grid", "row", "cell", "inputClass", "mode", "isInEditing", "isNew", "editConfirm", "editCancel", "createConfirm", "createCancel"] }], directives: [{ type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { type: i7.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i7.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: NgxSmartTableTbodyComponent, decorators: [{
            type: Component,
            args: [{ selector: '[angular2-st-tbody]', template: "<ng-container  *ngFor=\"let row of grid.getRows()\">\n  <tr (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"angular2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\n    <td *ngIf=\"isMultiSelectVisible\" class=\"angular2-smart-actions angular2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\n      <input type=\"checkbox\" class=\"form-check-input\" [ngModel]=\"row.isSelected\">\n    </td>\n    <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"angular2-smart-actions\">\n\n      <angular2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\">\n      </angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\"\n                                [row]=\"row\"\n                                [source]=\"source\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n    <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n    <td *ngFor=\"let cell of getVisibleCells(row.cells)\">\n      <angular2-smart-table-cell [cell]=\"cell\"\n                            [grid]=\"grid\"\n                            [row]=\"row\"\n                            [isNew]=\"false\"\n                            [mode]=\"mode\"\n                            [editConfirm]=\"editConfirm\"\n                            [editCancel]=\"editCancel\"\n                            [inputClass]=\"editInputClass\"\n                            [isInEditing]=\"row.isInEditing\">\n      </angular2-smart-table-cell>\n    </td>\n\n    <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n\n    <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"angular2-smart-actions\">\n      <angular2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                [row]=\"row\"\n                                [source]=\"source\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n  </tr>\n  <tr class=\"angular2-smart-row angular2-smart-row-detail\" *ngIf=\"row.isExpanded\">\n    <td [attr.colspan]=\"tableColumnsCount\" class=\"angular2-smart-column-expandedDetail\">\n      <ng-template #expandedRowChild ></ng-template>\n    </td>\n  </tr>\n</ng-container>\n<tr *ngIf=\"grid.getRows().length == 0\">\n  <td [attr.colspan]=\"tableColumnsCount\">\n    {{ noDataMessage }}\n  </td>\n</tr>\n", styles: [":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-st-tbody-expand a:first-child{margin-right:.25rem}\n"] }]
        }], propDecorators: { grid: [{
                type: Input
            }], source: [{
                type: Input
            }], deleteConfirm: [{
                type: Input
            }], editConfirm: [{
                type: Input
            }], editCancel: [{
                type: Input
            }], rowClassFunction: [{
                type: Input
            }], edit: [{
                type: Output
            }], delete: [{
                type: Output
            }], custom: [{
                type: Output
            }], userSelectRow: [{
                type: Output
            }], editRowSelect: [{
                type: Output
            }], multipleSelectRow: [{
                type: Output
            }], rowHover: [{
                type: Output
            }], onExpandRow: [{
                type: Output
            }], expandedRowChild: [{
                type: ViewChildren,
                args: ['expandedRowChild', { read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,