{"version":3,"file":"angular2-smart-table.mjs","sources":["../../../projects/angular2-smart-table/src/lib/lib/data-source/data-source.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/local/local.sorter.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/local/local.filter.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/local/local.pager.ts","../../../projects/angular2-smart-table/src/lib/lib/helpers.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/local/local.data-source.ts","../../../projects/angular2-smart-table/src/lib/lib/data-set/cell.ts","../../../projects/angular2-smart-table/src/lib/lib/data-set/row.ts","../../../projects/angular2-smart-table/src/lib/lib/settings.ts","../../../projects/angular2-smart-table/src/lib/lib/data-set/column.ts","../../../projects/angular2-smart-table/src/lib/lib/data-set/data-set.ts","../../../projects/angular2-smart-table/src/lib/lib/grid.ts","../../../projects/angular2-smart-table/src/lib/components/tags/tag/tag.component.ts","../../../projects/angular2-smart-table/src/lib/components/tags/tag/tag.component.html","../../../projects/angular2-smart-table/src/lib/components/tags/tags-list/tags-list.component.ts","../../../projects/angular2-smart-table/src/lib/components/tags/tags-list/tags-list.component.html","../../../projects/angular2-smart-table/src/lib/services/table.service.ts","../../../projects/angular2-smart-table/src/lib/components/thead/cells/actions-title.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/cells/title/title.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/cells/column-title.component.ts","../../../projects/angular2-smart-table/src/lib/directives/resizer.directive.ts","../../../projects/angular2-smart-table/src/lib/components/thead/rows/thead-titles-row.component.ts","../../../projects/angular2-smart-table/src/lib/pipes/bypass-security-trust.pipe.ts","../../../projects/angular2-smart-table/src/lib/components/thead/cells/add-button.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-default.ts","../../../projects/angular2-smart-table/src/lib/components/filter/custom-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/default-filter.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/select-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/completer-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/date-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/mselect-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter-types/input-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/default-filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/rows/thead-filters-row.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/cells/create-cancel.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/default-editor.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/select-editor.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/completer-editor.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-editors/input-editor.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.html","../../../projects/angular2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/rows/thead-form-row.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/thead.component.ts","../../../projects/angular2-smart-table/src/lib/components/thead/thead.component.html","../../../projects/angular2-smart-table/src/lib/components/tbody/cells/custom-item.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/cells/custom.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/cells/expand.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/cells/edit-delete.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/cells/save-cancel.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/tbody.component.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/tbody.component.html","../../../projects/angular2-smart-table/src/lib/components/pager/pager.component.ts","../../../projects/angular2-smart-table/src/lib/angular2-smart-table.component.ts","../../../projects/angular2-smart-table/src/lib/angular2-smart-table.component.html","../../../projects/angular2-smart-table/src/lib/pipes/pipes.module.ts","../../../projects/angular2-smart-table/src/lib/components/cell/cell.module.ts","../../../projects/angular2-smart-table/src/lib/components/filter/filter.module.ts","../../../projects/angular2-smart-table/src/lib/components/pager/pager.module.ts","../../../projects/angular2-smart-table/src/lib/components/tags/tags.module.ts","../../../projects/angular2-smart-table/src/lib/components/tbody/tbody.module.ts","../../../projects/angular2-smart-table/src/lib/directives/directives.module.ts","../../../projects/angular2-smart-table/src/lib/components/thead/thead.module.ts","../../../projects/angular2-smart-table/src/lib/angular2-smart-table.module.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/server/server-source.conf.ts","../../../projects/angular2-smart-table/src/lib/lib/data-source/server/server.data-source.ts","../../../projects/angular2-smart-table/src/public-api.ts","../../../projects/angular2-smart-table/src/angular2-smart-table.ts"],"sourcesContent":["import {Observable, Subject} from 'rxjs';\nimport {ISortDirection} from '../settings';\n\nexport interface ISortConfig {\n  field: string,\n  direction: ISortDirection,\n  compare?: Function,\n}\n\nexport interface IFilterConfig {\n  field: string,\n  search: string,\n  filter?: Function,\n}\n\nexport interface IDataSourceFilter {\n  filters: Array<IFilterConfig>,\n  andOperator: boolean;\n}\n\nexport interface IPagingConfig {\n  page: number;\n  perPage: number;\n}\n\nexport interface DataSourceChangeEvent {\n  action: string,\n  elements: any, // TODO: this should be Array<any> but getElements() returns Promise<any> for some reason....\n  paging: IPagingConfig,\n  filter: IDataSourceFilter;\n  sort: ISortConfig[];\n}\n\nexport abstract class DataSource {\n\n  protected onChangedSource = new Subject<DataSourceChangeEvent>();\n  protected onAddedSource = new Subject<any>();\n  protected onUpdatedSource = new Subject<any>();\n  protected onRemovedSource = new Subject<any>();\n\n  abstract getAll(): Promise<any>;\n  abstract getElements(): Promise<any>;\n  abstract getFilteredAndSorted(): Promise<any>;\n  abstract getSort(): Array<ISortConfig>;\n  abstract getFilter(): IDataSourceFilter;\n  abstract getPaging(): IPagingConfig;\n\n  /**\n   * Returns the total number of elements with respect to the current filter.\n   */\n  abstract count(): number;\n  abstract toggleItem(row: any, isSelected: boolean): void;\n  abstract selectAllItems(checked: boolean, onlyFiltered: boolean): Promise<void>;\n  abstract getSelectedItems(): Array<any>;\n  abstract isEveryElementSelected(onlyFiltered: boolean): boolean;\n\n  refresh() {\n    this.emitOnChanged('refresh');\n  }\n\n  load(data: Array<any>): Promise<any> {\n    this.emitOnChanged('load');\n    return Promise.resolve();\n  }\n\n  onChanged(): Observable<any> {\n    return this.onChangedSource.asObservable();\n  }\n\n  onAdded(): Observable<any> {\n    return this.onAddedSource.asObservable();\n  }\n\n  onUpdated(): Observable<any> {\n    return this.onUpdatedSource.asObservable();\n  }\n\n  onRemoved(): Observable<any> {\n    return this.onRemovedSource.asObservable();\n  }\n\n  prepend(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('prepend');\n    return Promise.resolve();\n  }\n\n  append(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('append');\n    return Promise.resolve();\n  }\n\n  add(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('add');\n    return Promise.resolve();\n  }\n\n  remove(element: any): Promise<any> {\n    this.emitOnRemoved(element);\n    this.emitOnChanged('remove');\n    return Promise.resolve();\n  }\n\n  update(element: any, values: any): Promise<any> {\n    this.emitOnUpdated(element);\n    this.emitOnChanged('update');\n    return Promise.resolve();\n  }\n\n  empty(): Promise<any> {\n    this.emitOnChanged('empty');\n    return Promise.resolve();\n  }\n\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, direction: asc|desc|null, compare?: Function|null},\n   * ]\n   * @param conf the configuration to add\n   * @param doEmit indicates whether a sort event shall be emitted\n   * @returns this data source\n   */\n  setSort(conf: Array<ISortConfig>, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('sort');\n    }\n  }\n\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, direction: asc|desc|null, compare?: Function|null},\n   * ]\n   * @param conf the configuration to add\n   * @param doEmit indicates whether a sort event shall be emitted\n   * @returns this data source\n   */\n  updateSort(conf: Array<ISortConfig>, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('sort');\n    }\n  }\n\n  setFilter(conf: Array<IFilterConfig>, andOperator?: boolean, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  addFilter(fieldConf: IFilterConfig, andOperator?: boolean, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('paging');\n    }\n  }\n\n  setPage(page: number, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('page');\n    }\n  }\n\n  protected emitOnRemoved(element: any) {\n    this.onRemovedSource.next(element);\n  }\n\n  protected emitOnUpdated(element: any) {\n    this.onUpdatedSource.next(element);\n  }\n\n  protected emitOnAdded(element: any) {\n    this.onAddedSource.next(element);\n  }\n\n  protected emitOnChanged(action: string) {\n    this.getElements().then((elements) => this.onChangedSource.next({\n      action: action,\n      elements: elements,\n      paging: this.getPaging(),\n      filter: this.getFilter(),\n      sort: this.getSort(),\n    }));\n  }\n}\n","export function defaultObjectComparator(direction: number, left: any, right: any): number {\n  if (left == null && right == null) {\n    return 0;\n  }\n  // only one of them can be null now\n  if (left == null || left < right!) {\n    return -1 * direction;\n  }\n  if (right == null || right < left) {\n    return direction;\n  }\n  // none of them can be null now, and they must be equal\n  return 0;\n}\n\nexport function defaultNumberComparator(direction: number, left: number | null, right: number | null): number {\n  // the default comparator already does what we want, so this function is merely a type-safe alias\n  return defaultObjectComparator(direction, left, right);\n}\n\nexport function defaultStringComparator(direction: number, left: string | null, right: string | null): number {\n  if (left == null && right == null) {\n    return 0;\n  } else if (left == null) {\n    return -1 * direction;\n  } else if (right == null) {\n    return direction;\n  } else {\n    return left.localeCompare(right) * direction;\n  }\n}\n\n/**\n * Compares two values with special treatment for numbers and strings.\n *\n * The rule is: if both values are of type number (or null), they are compared as if they were numbers.\n * If both values are either null, undefined or typeof string, they are compared as strings using the current locale.\n * Otherwise, they are compared using their natural ordering.\n *\n * Null values are considered less than any non-null element. Null and undefined are considered equal.\n *\n * @param direction 1 for ascending and -1 for descending (other values are not allowed)\n * @param left the left value\n * @param right the right value\n */\nexport function defaultComparator(direction: any, left: any, right: any) {\n  const leftIsNumeric = left == null || (!isNaN(parseFloat(left)) && !isNaN(left - 0));\n  const rightIsNumeric = right == null || (!isNaN(parseFloat(right)) && !isNaN(right - 0));\n  const leftIsString = left == null || (typeof left === 'string');\n  const rightIsString = right == null || (typeof right === 'string');\n  if (leftIsNumeric && rightIsNumeric) {\n    return defaultNumberComparator(direction, Number(left), Number(right));\n  } else if (leftIsString && rightIsString) {\n    return defaultStringComparator(direction, left, right);\n  } else {\n    return defaultObjectComparator(direction, left, right);\n  }\n}\n","import {IFilterConfig} from '../data-source';\n\n/**\n * A filter predicate that implements a case-insensitive string inclusion.\n *\n * @param cellValue the cell value to check\n * @param search the search/filter string to check against\n * @param data ignored\n * @param cellName ignored\n */\nexport function defaultStringInclusionFilter(cellValue: string, search: string, data: any, cellName: string) {\n  /* Implementation note: we declared the parameters as strings, but this does NOT mean they\n   * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\n   */\n  const sanitizedCellValue = cellValue?.toString() ?? '';\n  const sanitizedSearchString = search?.toString() ?? '';\n  return sanitizedCellValue.toLowerCase().includes(sanitizedSearchString.toLowerCase());\n}\n\n/**\n * A filter predicate that implements a case-sensitive equality check.\n *\n * @param cellValue the cell value to check\n * @param search the search/filter string to check against\n * @param data ignored\n * @param cellName ignored\n */\nexport function defaultStringEqualsFilter(cellValue: string, search: string, data: any, cellName: string) {\n  /* Implementation note: we declared the parameters as strings, but this does NOT mean they\n   * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\n   */\n  const sanitizedCellValue = cellValue?.toString() ?? '';\n  const sanitizedSearchString = search?.toString() ?? '';\n  return sanitizedCellValue === sanitizedSearchString;\n}\n\nexport class LocalFilter {\n\n  static filter(data: Array<any>, filterConf: IFilterConfig): Array<any> {\n    const filter: Function = filterConf.filter ? filterConf.filter : defaultStringInclusionFilter;\n    return data.filter((el) => {\n      let parts = filterConf.field.split(\".\");\n      let prop = el;\n      for (let i = 0; i < parts.length && typeof prop !== 'undefined'; i++) {\n        prop = prop[parts[i]];\n      }\n      return filter.call(null, prop, filterConf.search, data, filterConf.field, el);\n    });\n  }\n}\n","export class LocalPager {\n\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\n    return data.slice(perPage * (page - 1), perPage * page);\n  }\n}\n","import {cloneDeep} from 'lodash-es';\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nexport const deepExtend = function (...objects: Array<any>): any {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0];\n\n  // convert arguments to array and cut off target object\n  const args = Array.prototype.slice.call(arguments, 1);\n\n  let val, src;\n\n  args.forEach((obj: any) => {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n      val = obj[key]; // new value\n\n      // recursion prevention\n      if (val === target) {\n        return;\n\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return;\n\n        // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return;\n\n        // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return;\n\n        // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n\n  return target;\n};\n\nexport class Deferred {\n\n  promise: Promise<any>;\n\n  resolve: any;\n  reject: any;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\n  const keys = name.split('.');\n  // clone the object\n  let level = deepExtend({}, object);\n  keys.forEach((k) => {\n    if (typeof level !== 'undefined') {\n      level = level[k];\n    }\n  });\n\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nexport function getPageForRowIndex(index: number, perPage: number): number {\n  // we need to add 1 to convert 0-based index to 1-based page number.\n  return Math.floor(index / perPage) + 1;\n}\n","import {defaultComparator} from './local.sorter';\nimport {LocalFilter} from './local.filter';\nimport {LocalPager} from './local.pager';\nimport {DataSource, IDataSourceFilter, IFilterConfig, IPagingConfig, ISortConfig} from '../data-source';\nimport {deepExtend} from '../../helpers';\n\nexport class LocalDataSource extends DataSource {\n\n  protected data: Array<any> = [];\n  protected filteredAndSorted: Array<any> = [];\n  protected sortConf: Array<ISortConfig> = [];\n  protected filterConf: IDataSourceFilter = {\n    filters: [],\n    andOperator: true,\n  };\n  protected pagingConf: IPagingConfig = {page: 1, perPage: 10};\n\n  private selectedItems: Array<any> = [];\n  constructor(data: Array<any> = []) {\n    super();\n\n    this.data = data;\n  }\n\n  load(data: Array<any>): Promise<any> {\n    this.data = data;\n\n    return super.load(data);\n  }\n\n  prepend(element: any): Promise<any> {\n    this.reset(true);\n\n    this.data.unshift(element);\n    return super.prepend(element);\n  }\n\n  append(element: any): Promise<any> {\n    this.reset(true);\n\n    this.data.push(element);\n    return super.append(element);\n  }\n\n  add(element: any): Promise<any> {\n    this.data.push(element);\n\n    return super.add(element);\n  }\n\n  remove(element: any): Promise<any> {\n    this.data = this.data.filter(el => el !== element);\n\n    return super.remove(element);\n  }\n\n  update(element: any, values: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.find(element).then((found) => {\n        found = deepExtend(found, values);\n        super.update(found, values).then(resolve).catch(reject);\n      }).catch(reject);\n    });\n  }\n\n  find(element: any): Promise<any> {\n    const found = this.data.find(el => el === element);\n    if (found) {\n      return Promise.resolve(found);\n    }\n\n    return Promise.reject(new Error('Element was not found in the dataset'));\n  }\n\n  getElements(): Promise<any> {\n    const data = this.data.slice(0);\n    return Promise.resolve(this.prepareData(data));\n  }\n\n  getFilteredAndSorted(): Promise<any> {\n    let data = this.data.slice(0);\n    this.prepareData(data); // this would return only the current page, but it sets filteredAndSorted array\n    return Promise.resolve(this.filteredAndSorted);\n  }\n\n  getAll(): Promise<any> {\n    const data = this.data.slice(0);\n    return Promise.resolve(data);\n  }\n\n  reset(silent = false) {\n    if (silent) {\n      this.filterConf = {\n        filters: [],\n        andOperator: true,\n      };\n      this.sortConf = [];\n      this.pagingConf.page = 1;\n    } else {\n      this.setFilter([], true, false);\n      this.setSort([], false);\n      this.setPage(1);\n    }\n  }\n\n  empty(): Promise<any> {\n    this.data = [];\n\n    return super.empty();\n  }\n\n  count(): number {\n    return this.filteredAndSorted.length;\n  }\n\n  toggleItem(row: any, isSelected: boolean): void {\n    if (isSelected) this.selectedItems.push(row);\n    else this.selectedItems = this.selectedItems.filter((i) => i !== row);\n  }\n\n  // TODO: actually there is no need that this is an async function, but changing the signature would be a breaking change\n  async selectAllItems(checked: boolean, onlyFiltered: boolean = false): Promise<void> {\n    if (checked) {\n      const itemsToSelect = onlyFiltered ? this.filteredAndSorted : this.data;\n      this.selectedItems = itemsToSelect.slice(0);\n    } else this.selectedItems = [];\n  }\n\n  isEveryElementSelected(onlyFiltered: boolean = false): boolean {\n    const itemsToCheck = onlyFiltered ? this.filteredAndSorted : this.data;\n    if (onlyFiltered) {\n      // TODO: this is an ugly and costly O(n²) check, but currently we have no other choice....\n      if (itemsToCheck.length !== this.selectedItems.length) return false;\n      for (const item of itemsToCheck) {\n        if (this.selectedItems.indexOf(itemsToCheck) < 0) return false;\n      }\n      return true;\n    } else {\n      return itemsToCheck.length === this.selectedItems.length;\n    }\n  }\n\n  getSelectedItems(): Array<any> {\n    return this.selectedItems;\n  }\n\n  setSort(conf: Array<ISortConfig>, doEmit = true): LocalDataSource {\n    this.sortConf = conf ?? [];\n    super.setSort(conf, doEmit);\n    return this;\n  }\n\n  updateSort(conf: Array<ISortConfig>, doEmit = true): LocalDataSource {\n    if (conf !== null) {\n      conf.forEach((fieldConf) => {\n        const found = this.sortConf.findIndex(c => c.field === fieldConf.field);\n        if (found >= 0) {\n          if (fieldConf.compare === undefined) {\n            // keep the previously configured compare function\n            fieldConf.compare = this.sortConf[found].compare;\n          }\n          this.sortConf.splice(found, 1);\n        }\n        // push the updated config to the front of the array (highest sort priority)\n        this.sortConf = [fieldConf, ...this.sortConf];\n      });\n    }\n    super.setSort(conf, doEmit);\n    return this;\n  }\n\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, search: string, filter: Function|null},\n   * ]\n   * @param conf\n   * @param andOperator\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n  setFilter(conf: Array<IFilterConfig>, andOperator = true, doEmit = true): LocalDataSource {\n    if (conf && conf.length > 0) {\n      conf.forEach((fieldConf) => {\n        this.addFilter(fieldConf, andOperator, false);\n      });\n    } else {\n      this.filterConf = {\n        filters: [],\n        andOperator: true,\n      };\n    }\n    this.filterConf.andOperator = andOperator;\n    this.pagingConf.page = 1;\n\n    super.setFilter(conf, andOperator, doEmit);\n    return this;\n  }\n\n  addFilter(fieldConf: IFilterConfig, andOperator = true, doEmit: boolean = true): LocalDataSource {\n    let found = false;\n    this.filterConf.filters.forEach((currentFieldConf: IFilterConfig, index: number) => {\n      if (currentFieldConf.field === fieldConf.field) {\n        this.filterConf.filters[index] = fieldConf;\n        found = true;\n      }\n    });\n    if (!found) {\n      this.filterConf.filters.push(fieldConf);\n    }\n    this.filterConf.andOperator = andOperator;\n    super.addFilter(fieldConf, andOperator, doEmit);\n    return this;\n  }\n\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\n    this.pagingConf.page = page;\n    this.pagingConf.perPage = perPage;\n\n    super.setPaging(page, perPage, doEmit);\n    return this;\n  }\n\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\n    this.pagingConf.page = page;\n    super.setPage(page, doEmit);\n    return this;\n  }\n\n  getSort(): Array<ISortConfig> {\n    return this.sortConf;\n  }\n\n  getFilter(): IDataSourceFilter {\n    return this.filterConf;\n  }\n\n  getPaging(): IPagingConfig {\n    return this.pagingConf;\n  }\n\n  protected prepareData(data: Array<any>): Array<any> {\n    data = this.filter(data);\n    data = this.sort(data);\n    this.filteredAndSorted = data.slice(0);\n\n    return this.paginate(data);\n  }\n\n  protected sort(data: Array<any>): Array<any> {\n    // only use the part of the config where sorting is enabled\n    const sortConfig = this.sortConf.filter(c => c.direction !== null);\n\n    return data.sort((a, b) => {\n      for (const sc of sortConfig) {\n        const dir: number = (sc.direction === 'asc') ? 1 : -1;\n        const compare: Function = sc.compare ? sc.compare : defaultComparator;\n        let parts = sc.field.split(\".\");\n        let propA = a;\n        for (let i = 0; i < parts.length && typeof propA !== 'undefined'; i++) {\n          propA = propA[parts[i]];\n        }\n        let propB = b;\n        for (let i = 0; i < parts.length && typeof propB !== 'undefined'; i++) {\n          propB = propB[parts[i]];\n        }\n        const result = compare.call(null, dir, propA, propB);\n        if (result !== 0) return result;\n      }\n      return 0;\n    });\n  }\n\n  // TODO: refactor?\n  protected filter(data: Array<any>): Array<any> {\n    if (this.filterConf.filters) {\n      if (this.filterConf.andOperator) {\n        this.filterConf.filters.forEach(fieldConf => {\n          if (fieldConf.search.length > 0) {\n            data = LocalFilter.filter(data, fieldConf);\n          }\n        });\n      } else {\n        let mergedData: any = [];\n        this.filterConf.filters.forEach((fieldConf: any) => {\n          if (fieldConf['search'].length > 0) {\n            mergedData = mergedData.concat(LocalFilter.filter(data, fieldConf));\n          }\n        });\n        // remove non unique items\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\n          return arr.indexOf(elem) === pos;\n        });\n      }\n    }\n    return data;\n  }\n\n  protected paginate(data: Array<any>): Array<any> {\n    return LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\n  }\n}\n","import {Column} from './column';\nimport {DataSet} from './data-set';\nimport {Row} from './row';\n\nexport function prepareValue (value: any) { return value }\n\nexport class Cell {\n\n  newValue: any = '';\n  protected static PREPARE = prepareValue;\n\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\n    this.newValue = value;\n  }\n\n  getColumn(): Column {\n    return this.column;\n  }\n\n  getRow(): Row {\n    return this.row;\n  }\n\n  /**\n   * Gets the value (after post-processing with valuePrepareFunction).\n   */\n  getValue(): any {\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n    return prepare.call(null, this.value, this.row.getData(), this);\n  }\n\n  /**\n   * Returns the raw value that has not been post-processed by the valuePrepareFunction.\n   */\n  getRawValue(): any {\n    return this.value;\n  }\n\n  setValue(value: any): any {\n    this.newValue = value;\n  }\n\n  getId(): string {\n    return this.getColumn().id;\n  }\n\n  getTitle(): string {\n    return this.getColumn().title;\n  }\n\n  isEditable(): boolean {\n    if (this.getRow().index === -1) {\n      return this.getColumn().isAddable ?? false;\n    }\n    else {\n      return this.getColumn().isEditable ?? false;\n    }\n  }\n\n  resetValue(): void {\n    this.newValue = this.getRawValue();\n  }\n}\n","import {Cell} from './cell';\nimport {Column} from './column';\nimport {DataSet} from './data-set';\n\nexport class Row {\n\n  isSelected: boolean = false;\n  isInEditing: boolean = false;\n  isExpanded: boolean = false;\n  cells: Array<Cell> = [];\n\n\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\n    this.process();\n  }\n\n  getCell(column: Column): Cell {\n    const theCell = this.cells.find(el => el.getColumn() === column)\n    if (!theCell) throw new Error('There is no cell with such Column');\n    return theCell;\n  }\n\n  getCells() {\n    return this.cells;\n  }\n\n  getData(): any {\n    return this.data;\n  }\n\n  getIsSelected(): boolean {\n    return this.isSelected;\n  }\n\n  getIsExpanded(): boolean {\n    return this.isExpanded;\n  }\n\n  getNewData(): any {\n    const values = Object.assign({}, this.data);\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n    return values;\n  }\n\n  setData(data: any): any {\n    this.data = data;\n    this.process();\n  }\n\n  process() {\n    this.cells = [];\n    this._dataSet.getColumns().forEach((column: Column) => {\n      const cell = this.createCell(column);\n      this.cells.push(cell);\n    });\n  }\n\n  createCell(column: Column): Cell {\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n    return new Cell(value, this, column, this._dataSet);\n  }\n}\n","import {Cell} from \"./data-set/cell\";\nimport {Row} from \"./data-set/row\";\n\n/**\n * @deprecated just use 'single' or 'multi'\n */\nexport enum SelectModeOptions {\n  Single = \"single\",\n  Multi = \"multi\"\n}\n\nexport interface Settings {\n  columns?: IColumns;\n  resizable?: boolean;\n  hideable?: boolean; // true = i can hide columns\n  mode?: 'external' | 'inline';\n  hideHeader?: boolean;\n  hideSubHeader?: boolean;\n  noDataMessage?: string;\n  attr?: Attribute;\n  actions?: Actions | false;\n  edit?: EditAction;\n  add?: AddAction;\n  delete?: DeleteAction;\n  filter?: Filter;\n  /**\n   * @deprecated use `expand.component`\n   */\n  expandedRowComponent?: any;\n  expand?: Expand;\n  pager?: Pager;\n  rowClassFunction?: Function;\n  selectMode?: 'single' | 'multi' | 'multi_filtered';\n  selectedRowIndex?: number;\n  switchPageToSelectedRowPage?: boolean;\n}\n\nexport interface Filter {\n  inputClass?: string;\n}\n\nexport interface Expand {\n  /**\n   * The content of the expand button.\n   * @deprecated use buttonContent property\n   */\n  expandRowButtonContent?: string;\n  /**\n   * The angular component that shall be rendered when the row is expanded.\n   * The data of the row is assigned to a property rowData.\n   */\n  component?: any;\n  /**\n   * The content of the expand button.\n   * This can be HTML or even SVG - see the sanitizer property.\n   */\n  buttonContent?: string;\n  hiddenWhen?: (row: Row) => boolean;\n  disabledWhen?: (row: Row) => boolean;\n  /**\n   * Configures the sanitizer to allow HTML or SVG content in the button.\n   */\n  sanitizer?: SanitizerSettings;\n}\n\nexport interface IColumns {\n  [key: string]: IColumn;\n}\n\nexport enum IColumnType {\n  Text = \"text\",\n  Html = \"html\",\n  Custom = \"custom\"\n}\n\nexport type ISortDirection = 'asc' | 'desc' | null; // null means: do not sort\n\nexport type ColumnValuePrepareFunction = (cellValue: any, rowData: any, cell: Cell) => any;\nexport type ColumnFilterFunction = (cellValue: any, searchString: string, allData: any, cellName: string, rowData: any) => boolean;\n\nexport interface SanitizerSettings {\n  /**\n   * Set this to true to bypass the sanitizer for HTML content.\n   * Security note: do not use this, if the content can be controlled by the user!\n   */\n  bypassHtml?: boolean;\n}\n\nexport interface IColumn {\n  title?: string;\n  type?: IColumnType;\n  sanitizer?: SanitizerSettings;\n  classHeader?: string;\n  classContent?: string;\n  class?: string;\n  width?: string;\n  sortDirection?: ISortDirection;\n  defaultSortDirection?: ISortDirection;\n  editor?: { type: string, config?: any, component?: any };\n  filter?: { type: string, config?: any, component?: any } | boolean;\n  renderComponent?: any;\n  compareFunction?: Function;\n  valuePrepareFunction?: ColumnValuePrepareFunction;\n  filterFunction?: ColumnFilterFunction;\n  onComponentInitFunction?: Function;\n\n  placeholder?: string;\n  hide?: boolean;\n  isSortable?: boolean;\n  isEditable?: boolean;\n  isAddable?: boolean;\n  isFilterable?: boolean;\n}\n\nexport interface Attribute {\n  id?: string;\n  class?: string;\n}\n\nexport interface Actions {\n  columnTitle?: string;\n  add?: boolean;\n  edit?: boolean;\n  delete?: boolean;\n  position?: 'left' | 'right';\n  custom?: CustomAction[];\n}\n\nexport interface AddAction {\n  inputClass?: string;\n  sanitizer?: SanitizerSettings;\n  hiddenWhen?: () => boolean;\n  disabledWhen?: () => boolean;\n  addButtonContent?: string;\n  createButtonContent?: string;\n  cancelButtonContent?: string;\n  confirmCreate?: boolean;\n}\n\nexport interface EditAction {\n  inputClass?: string;\n  sanitizer?: SanitizerSettings;\n  hiddenWhen?: (row: Row) => boolean;\n  disabledWhen?: (row: Row) => boolean;\n  editButtonContent?: string;\n  saveButtonContent?: string;\n  cancelButtonContent?: string;\n  confirmSave?: boolean;\n}\n\nexport interface DeleteAction {\n  sanitizer?: SanitizerSettings;\n  hiddenWhen?: (row: Row) => boolean;\n  disabledWhen?: (row: Row) => boolean;\n  deleteButtonContent?: string;\n  confirmDelete?: boolean;\n}\n\nexport interface Pager {\n  page?: number;\n  display?: boolean;\n  perPage?: number;\n  perPageSelect?: number[];\n  perPageSelectLabel?: string;\n}\n\nexport interface CustomAction {\n  name: string;\n  title: string;\n  renderComponent?: any;\n}\n","import {\n  ColumnFilterFunction,\n  ColumnValuePrepareFunction,\n  IColumn,\n  IColumnType,\n  ISortDirection,\n  SanitizerSettings\n} from '../settings';\nimport {DataSet} from './data-set';\n\nexport class Column implements IColumn {\n\n  placeholder?: string;\n  title: string = '';\n  hide: boolean = false;\n  type?: IColumnType = IColumnType.Text;\n  sanitizer: SanitizerSettings = {};\n  classHeader?: string = '';\n  classContent?: string = '';\n  width?: string = '';\n  isSortable?: boolean = true;\n  isEditable?: boolean = true;\n  isAddable?: boolean = true;\n  isFilterable?: boolean = false;\n  sortDirection: ISortDirection = 'asc';\n  defaultSortDirection?: ISortDirection = undefined;\n  editor?: { type: string, config: any, component: any } = {type: '', config: {}, component: null};\n  filter?: { type: string, config: any, component: any } = {type: '', config: {}, component: null};\n  renderComponent?: any = null;\n  compareFunction?: Function;\n  valuePrepareFunction?: ColumnValuePrepareFunction;\n  filterFunction?: ColumnFilterFunction;\n  onComponentInitFunction?: Function;\n\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\n    this.process();\n  }\n\n  getOnComponentInitFunction(): Function | undefined {\n    return this.onComponentInitFunction;\n  }\n\n  getCompareFunction(): Function | undefined {\n    return this.compareFunction;\n  }\n\n  getValuePrepareFunction(): Function | undefined {\n    return this.valuePrepareFunction;\n  }\n\n  getFilterFunction(): Function | undefined {\n    return this.filterFunction;\n  }\n\n  getConfig(): any {\n    return this.editor && this.editor.config;\n  }\n\n  getFilterType(): any {\n    return this.filter && this.filter.type;\n  }\n\n  getFilterConfig(): any {\n    return this.filter && this.filter.config;\n  }\n\n  /**\n   * Retrieves a setting by name.\n   *\n   * @param key the current key name\n   * @param compatKeys key names for backwards compatibility\n   * @private\n   */\n  private lookupSetting<T>(key: string, compatKeys: string[] = []): T | undefined {\n    if (typeof this.settings[key] === undefined) {\n      for (const k of compatKeys) {\n        if (typeof this.settings[k] !== undefined) {\n          return this.settings[k];\n        }\n      }\n      return undefined;\n    } else {\n      return this.settings[key] as T;\n    }\n  }\n\n  protected process() {\n    // the pattern is \"X = lookup(key) ?? X\" - this keeps the default value in case the setting is undefined\n\n    this.placeholder = this.lookupSetting('placeholder');\n    this.sanitizer = this.lookupSetting('sanitizer') ?? {};\n    this.title = this.lookupSetting('title') ?? this.title;\n    this.classHeader = this.lookupSetting('classHeader', ['class']) ?? this.classHeader;\n    this.classContent = this.lookupSetting('classContent', ['class']) ?? this.classContent;\n    this.width = this.lookupSetting('width') ?? this.width;\n    this.hide = this.lookupSetting('hide') ?? this.hide;\n    this.type = this.lookupSetting('type') ?? this.determineType();\n    this.editor = this.lookupSetting('editor') ?? this.editor;\n    this.filter = this.lookupSetting('filter') ?? this.filter;\n    this.renderComponent = this.lookupSetting('renderComponent') ?? this.renderComponent;\n\n    this.isFilterable = this.filter !== undefined && !!this.filter;\n    this.isSortable = this.lookupSetting('isSortable', ['sort']) ?? this.isSortable;\n    this.isEditable = this.lookupSetting('isEditable', ['editable']) ?? this.isEditable;\n    this.isAddable = this.lookupSetting('isAddable') ?? this.isAddable;\n    this.defaultSortDirection = this.lookupSetting('sortDirection') ?? this.defaultSortDirection;\n    this.sortDirection = this.defaultSortDirection ?? this.sortDirection;\n\n    this.compareFunction = this.lookupSetting('compareFunction');\n    this.valuePrepareFunction = this.lookupSetting('valuePrepareFunction');\n    this.filterFunction = this.lookupSetting('filterFunction');\n    this.onComponentInitFunction = this.lookupSetting('onComponentInitFunction');\n  }\n\n  determineType(): IColumnType {\n    // TODO: determine type by data\n    return IColumnType.Text;\n  }\n}\n","import {Row} from './row';\nimport {Column} from './column';\n\nexport class DataSet {\n\n  newRow!: Row;\n\n  protected data: Array<Row> = [];\n  protected columns: Array<Column> = [];\n  protected rows: Array<Row> = [];\n  protected selectedRow?: Row;\n  protected expandedRow?: Row;\n  protected willSelect: string = '';\n\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\n    this.createColumns(columnSettings);\n    this.setData(data);\n\n    this.createNewRow();\n  }\n\n  setData(data: Array<any>, selectedRows: Array<any> = []) {\n    this.data = data.map((el, index) => {\n      const row = new Row(index, el, this);\n      row.isSelected = selectedRows.indexOf(el) > -1;\n      return row;\n    });\n    this.createRows();\n  }\n\n  getColumns(): Array<Column> {\n    return this.columns;\n  }\n\n  getExpandedRow(): Row {\n    if (!this.expandedRow) {\n      console.warn('Expanded row not found');\n      throw new Error('Expanded row not found');\n    }\n    return this.expandedRow;\n  }\n\n  getSelectedRow(): Row {\n    if (!this.selectedRow) {\n      console.warn('Selected row not found');\n      throw new Error('Selected row not found');\n    }\n    return this.selectedRow;\n  }\n\n  getRows(): Array<Row> {\n    return this.rows ?? [];\n  }\n\n  getFirstRow(): Row {\n    return this.rows[0];\n  }\n\n  getLastRow(): Row {\n    return this.rows[this.rows.length - 1];\n  }\n\n  findRowByData(data: any): Row {\n    const row = this.rows.find((row: Row) => row.getData() === data);\n    if (!row) {\n      console.warn('Data row not found', data);\n      throw new Error('Row not found');\n    }\n    return row;\n  }\n\n  deselectAll() {\n    this.rows.forEach((row) => {\n      row.isSelected = false;\n    });\n    // we need to clear selectedRow field because no one row selected\n    this.selectedRow = undefined;\n  }\n\n  clearExpandAll() {\n    this.rows.forEach((row) => {\n      row.isExpanded = false;\n    });\n    // we need to clear selectedRow field because no one row selected\n    this.expandedRow = undefined;\n  }\n\n  selectRow(row: Row): void {\n    const previousIsSelected = row.isSelected;\n    this.deselectAll();\n\n    row.isSelected = !previousIsSelected;\n    this.selectedRow = row;\n  }\n\n  multipleSelectRow(row: Row): void {\n    row.isSelected = !row.isSelected;\n    this.selectedRow = row;\n  }\n\n  expandRow(row: Row): Row {\n    const previousIsExpanded = row.isExpanded;\n    this.clearExpandAll();\n    if (row.index !== this.expandedRow?.index) {\n      this.expandedRow = undefined;\n    }\n    row.isExpanded = !previousIsExpanded;\n    this.expandedRow = row;\n    return this.expandedRow;\n  }\n\n  selectPreviousRow(): Row {\n    if (this.rows.length > 0) {\n      let index = this.selectedRow ? this.selectedRow.index : 0;\n      if (index > this.rows.length - 1) {\n        index = this.rows.length - 1;\n      }\n      this.selectRow(this.rows[index]);\n      return this.getSelectedRow();\n    }\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectFirstRow(): Row {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[0]);\n      return this.getSelectedRow();\n    }\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectLastRow(): Row {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[this.rows.length - 1]);\n      return this.getSelectedRow();\n    }\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectRowByIndex(index?: number): void {\n    const rowsLength: number = this.rows.length;\n    if (rowsLength === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n    if (!index) {\n      this.selectFirstRow();\n    } else if (index > 0 && index < rowsLength) {\n      this.selectRow(this.rows[index]);\n    } else\n      // we need to deselect all rows if we got an incorrect index\n      this.deselectAll();\n  }\n\n  willSelectFirstRow() {\n    this.willSelect = 'first';\n  }\n\n  willSelectLastRow() {\n    this.willSelect = 'last';\n  }\n\n  select(selectedRowIndex?: number): Row {\n    if (this.getRows().length === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n    if (this.willSelect) {\n      if (this.willSelect === 'first') {\n        this.selectFirstRow();\n      }\n      if (this.willSelect === 'last') {\n        this.selectLastRow();\n      }\n      this.willSelect = '';\n    } else {\n      this.selectRowByIndex(selectedRowIndex);\n    }\n\n    return this.getSelectedRow();\n  }\n\n  createNewRow() {\n    this.newRow = new Row(-1, {}, this);\n    this.newRow.isInEditing = true;\n  }\n\n  /**\n   * Create columns by mapping from the settings\n   * @param settings\n   * @private\n   */\n  createColumns(settings: any) {\n    for (const id in settings) {\n      if (settings.hasOwnProperty(id)) {\n        this.columns.push(new Column(id, settings[id], this));\n      }\n    }\n  }\n\n  /**\n   * Create rows based on current data prepared in data source\n   * @private\n   */\n  createRows() {\n    this.rows = [];\n    this.data.forEach((el) => {\n      this.rows.push(el);\n    });\n  }\n}\n","import {Observable, Subject, Subscription} from 'rxjs';\n\nimport {Deferred, getDeepFromObject, getPageForRowIndex} from './helpers';\nimport {Column} from './data-set/column';\nimport {Row} from './data-set/row';\nimport {DataSet} from './data-set/data-set';\nimport {DataSource, DataSourceChangeEvent} from './data-source/data-source';\nimport {EventEmitter} from '@angular/core';\n\nimport {Settings} from \"./settings\";\nimport {CreateConfirmEvent, DeleteConfirmEvent, EditConfirmEvent} from './events';\n\nexport class Grid {\n\n  createFormShown: boolean = false;\n\n  source!: DataSource;\n  settings!: Settings;\n  dataSet!: DataSet;\n\n  onSelectRowSource = new Subject<any>();\n\n  private sourceOnChangedSubscription!: Subscription;\n  private sourceOnUpdatedSubscription!: Subscription;\n\n  constructor(source: DataSource, settings: any) {\n    this.setSettings(settings);\n    this.setSource(source);\n  }\n\n\n  detach(): void {\n    if (this.sourceOnChangedSubscription) {\n      this.sourceOnChangedSubscription.unsubscribe();\n    }\n    if (this.sourceOnUpdatedSubscription) {\n      this.sourceOnUpdatedSubscription.unsubscribe();\n    }\n  }\n\n  showActionColumn(position: string): boolean {\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n  }\n\n  isCurrentActionsPosition(position: string): boolean {\n    return position == this.getSetting('actions.position');\n  }\n\n  isActionsVisible(): boolean {\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n  }\n\n  isMultiSelectVisible(): boolean {\n    return ['multi', 'multi_filtered'].indexOf(this.getSetting('selectMode')) > -1;\n  }\n\n  getNewRow(): Row {\n    return this.dataSet.newRow;\n  }\n\n  setSettings(settings: Settings) {\n    this.settings = settings;\n    this.dataSet = new DataSet([], this.getSetting('columns'));\n\n    if (this.source) {\n      this.source.refresh();\n    }\n  }\n\n  getDataSet(): DataSet {\n    return this.dataSet;\n  }\n\n  setSource(source: DataSource) {\n    this.detach();\n    this.source = this.prepareSource(source);\n\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\n\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\n      const changedRow = this.dataSet.findRowByData(data);\n      changedRow.setData(data);\n    });\n  }\n\n  getSetting(name: string, defaultValue?: any): any {\n    return getDeepFromObject(this.settings, name, defaultValue);\n  }\n\n  getColumns(): Array<Column> {\n    return this.dataSet.getColumns();\n  }\n\n  getRows(): Array<Row> {\n    return this.dataSet.getRows();\n  }\n\n  selectRow(row: Row) {\n    this.dataSet.selectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  multipleSelectRow(row: Row) {\n    this.dataSet.multipleSelectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  onSelectRow(): Observable<any> {\n    return this.onSelectRowSource.asObservable();\n  }\n\n  expandRow(row: Row) {\n    this.dataSet.expandRow(row);\n  }\n\n  edit(row: Row) {\n    row.isInEditing = true;\n  }\n\n  create(row: Row, confirmEmitter: EventEmitter<CreateConfirmEvent>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then((newData) => {\n      newData = newData ? newData : row.getNewData();\n      if (deferred.resolve.skipAdd) {\n        this.createFormShown = false;\n      } else {\n        this.source.prepend(newData).then(() => {\n          this.createFormShown = false;\n          this.dataSet.createNewRow();\n        });\n      }\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('add.confirmCreate')) {\n      confirmEmitter.emit({\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  save(row: Row, confirmEmitter: EventEmitter<EditConfirmEvent>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then((newData) => {\n      newData = newData ? newData : row.getNewData();\n      if (deferred.resolve.skipEdit) {\n        row.isInEditing = false;\n      } else {\n        this.source.update(row.getData(), newData).then(() => {\n          row.isInEditing = false;\n        });\n      }\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('edit.confirmSave')) {\n      confirmEmitter.emit({\n        row: row,\n        data: row.getData(),\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  delete(row: Row, confirmEmitter: EventEmitter<DeleteConfirmEvent>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then(() => {\n      this.source.remove(row.getData());\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('delete.confirmDelete')) {\n      confirmEmitter.emit({\n        row: row,\n        data: row.getData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  processDataChange(changes: DataSourceChangeEvent) {\n    if (this.shouldProcessChange(changes)) {\n      this.dataSet.setData(changes.elements, this.getSelectedItems());\n      if (this.getSetting('selectMode') === 'single') {\n        if (this.dataSet.getRows().length > 0) {\n          const row = this.determineRowToSelect(changes);\n          this.onSelectRowSource.next(row);\n        } else {\n          this.onSelectRowSource.next(null);\n        }\n      }\n    }\n  }\n\n  shouldProcessChange(changes: DataSourceChangeEvent): boolean {\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'empty', 'paging'].indexOf(changes.action) !== -1) {\n      return true;\n    } else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @breaking-change 1.8.0\n   * Need to add `| null` in return type\n   *\n   * TODO: move to selectable? Separate directive\n   */\n  determineRowToSelect(changes: DataSourceChangeEvent): Row | null {\n\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\n      return this.dataSet.select(this.getRowIndexToSelect());\n    }\n\n    if (this.shouldSkipSelection()) {\n      return null;\n    }\n\n    if (changes.action === 'remove') {\n      if (changes.elements.length === 0) {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectLastRow();\n      } else {\n        return this.dataSet.selectPreviousRow();\n      }\n    }\n    if (changes.action === 'append') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectLastRow();\n    }\n    if (changes.action === 'add') {\n      return this.dataSet.selectFirstRow();\n    }\n    if (changes.action === 'update') {\n      return this.dataSet.selectFirstRow();\n    }\n    if (changes.action === 'prepend') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectFirstRow();\n    }\n    return null;\n  }\n\n  prepareSource(source: any): DataSource {\n    const initialSource: any = this.getInitialSort();\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\n      source.setSort([initialSource], false);\n    }\n    source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n\n    source.refresh();\n    return source;\n  }\n\n  getInitialSort() {\n    const sortConf: any = {};\n    this.getColumns().forEach((column: Column) => {\n      if (column.isSortable && column.defaultSortDirection) {\n        sortConf['field'] = column.id;\n        sortConf['direction'] = column.defaultSortDirection;\n        sortConf['compare'] = column.getCompareFunction();\n      }\n    });\n    return sortConf;\n  }\n\n  getSelectedRows(): Array<any> {\n    return this.dataSet.getRows()\n      .filter(r => r.isSelected);\n  }\n\n  getSelectedItems(): Array<any> {\n    return this.source.getSelectedItems();\n  }\n\n  async selectAllRows(status: boolean) {\n    // remember that the data set of the grid only contains the visible elements on the current page\n    this.dataSet.getRows().forEach(r => r.isSelected = status);\n\n    // advise the data source to also update the selected elements\n    await this.source.selectAllItems(status, this.getSetting('selectMode') === 'multi_filtered');\n  }\n\n  getFirstRow(): Row {\n    return this.dataSet.getFirstRow();\n  }\n\n  getLastRow(): Row {\n    return this.dataSet.getLastRow();\n  }\n\n  private getSelectionInfo(): { perPage: number, page: number, selectedRowIndex: number, switchPageToSelectedRowPage: boolean } {\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n    const {perPage, page}: { perPage: number, page: number } = this.getSetting('pager');\n    return {perPage, page, selectedRowIndex, switchPageToSelectedRowPage};\n  }\n\n  private getRowIndexToSelect(): number {\n    const {switchPageToSelectedRowPage, selectedRowIndex, perPage} = this.getSelectionInfo();\n    const dataAmount: number = this.source.count();\n    /**\n     * source - contains all table data\n     * dataSet - contains data for current page\n     * selectedRowIndex - contains index for data in all data\n     *\n     * because of that, we need to count index for a specific row in page\n     * if\n     * `switchPageToSelectedRowPage` - we need to change page automatically\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n     *  if we return index witch not points to existing data - no line will be highlighted)\n     */\n    return (\n      switchPageToSelectedRowPage &&\n      selectedRowIndex < dataAmount &&\n      selectedRowIndex >= 0\n    ) ?\n      selectedRowIndex % perPage :\n      selectedRowIndex;\n  }\n\n  private getPageToSelect(source: DataSource): number {\n    const {switchPageToSelectedRowPage, selectedRowIndex, perPage, page} = this.getSelectionInfo();\n    let pageToSelect: number = Math.max(1, page);\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n    }\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n  }\n\n  private shouldSkipSelection(): boolean {\n    /**\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n     *\n     * Therefore, in order to select a row after some changes,\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n     *\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n     *\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n     * because when < 0 all lines must be deselected\n     */\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n    return selectedRowIndex < 0;\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n\n@Component({\n    selector: 'angular2-smart-table-tag',\n    styleUrls: ['./tag.component.scss'],\n    templateUrl: './tag.component.html',\n})\nexport class TagComponent {\n\n    @Input() item!: any;\n\n    @Output() close = new EventEmitter<any>();\n\n    closeClicked(evt: Event) {\n        evt.stopPropagation();\n        this.close.emit(this.item.id);\n    }\n}\n","<div style=\"padding: 5px; display: inline; white-space: nowrap\">\n  <svg\n    style=\"width: 15px\"\n    (click)=\"closeClicked($event)\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"fas\"\n    data-icon=\"times-circle\"\n    class=\"svg-inline--fa fa-times-circle fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n    ></path>\n  </svg>\n  <span style=\"margin-left: 3px\" class=\"itemText\">{{ item.title }}</span>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n    selector: 'angular2-smart-table-tags-list',\n    styleUrls: ['./tags-list.component.scss'],\n    templateUrl: './tags-list.component.html',\n})\nexport class TagsListComponent {\n\n    @Input() tags!: any[];\n\n    @Output() close = new EventEmitter<any>();\n\n    closedTag(tag: any) {\n        this.close.emit(tag);\n    }\n}\n","<div class=\"add-tag-list\" id=\"tagslist\">\n  <angular2-smart-table-tag\n    *ngFor=\"let tag of tags\"\n    [item]=\"tag\"\n    (close)=\"closedTag($event)\"\n  ></angular2-smart-table-tag>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TableService {\n  mouseMoveEvent$ = new Subject<MouseEvent>();\n}\n","import {AfterViewInit, Component, ElementRef, Input, OnChanges} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\n\n@Component({\n  selector: '[angular2-st-actions-title]',\n  template: `\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\n  `,\n})\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\n\n  @Input() grid!: Grid;\n\n  actionsColumnTitle!: string;\n\n  constructor(private ref: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('angular2-smart-actions');\n  }\n\n  ngOnChanges() {\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DataSource} from '../../../../lib/data-source/data-source';\nimport {Column} from '../../../../lib/data-set/column';\n\n@Component({\n  selector: 'angular2-smart-table-title',\n  styleUrls: ['./title.component.scss'],\n  template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n       (click)=\"_sort($event)\"\n       class=\"angular2-smart-sort-link sort\"\n       [ngClass]=\"currentDirection??''\">\n      {{ column.title }}\n    </a>\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\"\n            (click)=\"_hideColumnClicked($event)\">X\n    </button>\n  `,\n})\nexport class TitleComponent implements OnChanges {\n\n  currentDirection: 'asc'|'desc'|null = null;\n  @Input() column!: Column;\n  @Input() source!: DataSource;\n  @Input() isHideable!: boolean;\n  @Output() hide = new EventEmitter<any>();\n\n  protected dataChangedSub!: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        this.currentDirection = null;\n        const sortConf = this.source.getSort();\n        if (sortConf) {\n          sortConf.forEach(c => {\n            if (c.field === this.column.id) {\n              this.currentDirection = c.direction;\n            }\n          });\n        }\n      });\n    }\n  }\n\n  _sort(event: any) {\n    event.preventDefault();\n    this.changeSortDirection();\n    this.source.updateSort([\n      {\n        field: this.column.id,\n        direction: this.currentDirection,\n        compare: this.column.getCompareFunction(),\n      },\n    ]);\n  }\n\n\n  _hideColumnClicked(event: any) {\n    event.preventDefault();\n    this.hide.emit(this.column.id);\n  }\n\n\n  private changeSortDirection(): void {\n    // rotate sort direction, including null (no sort)\n    if (this.currentDirection === null) {\n      this.currentDirection = 'asc';\n    } else if (this.currentDirection === 'asc') {\n      this.currentDirection = 'desc';\n    } else if (this.currentDirection === 'desc') {\n      this.currentDirection = null;\n    }\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\nimport {Column} from '../../../lib/data-set/column';\nimport {DataSource} from '../../../lib/data-source/data-source';\n\n@Component({\n  selector: 'angular2-st-column-title',\n  template: `\n    <div class=\"angular2-smart-title\">\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\n    </div>\n  `,\n})\nexport class ColumnTitleComponent {\n\n  @Input() column!: Column;\n  @Input() source!: DataSource;\n  @Input() isHideable!: boolean;\n\n  @Output() hide = new EventEmitter<any>();\n\n}\n","import {Directive, ElementRef, HostListener, OnDestroy, OnInit, Renderer2} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {TableService} from '../services/table.service';\n\n@Directive({\n  selector: '[angular2-resizer]'\n})\nexport class NgxResizerDirective implements OnInit, OnDestroy {\n  isClicked!: boolean;\n\n  parentElement: any;\n  siblingElement: any;\n\n  pointerOffset!: number;\n  parentOffset!: number;\n  siblingOffset!: number;\n\n  destroyed$ = new Subject<any>();\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private tableService: TableService) {\n  }\n\n  ngOnInit() {\n    this.tableService.mouseMoveEvent$\n      .pipe(\n        takeUntil(this.destroyed$),\n        filter(() => this.isClicked)\n      )\n      .subscribe((event: MouseEvent) => {\n        const offset = this.pointerOffset - event.pageX;\n        const width = this.parentOffset - offset;\n        this.renderer.setStyle(this.parentElement, 'width', width + 'px');\n        this.renderer.setStyle(this.siblingElement, 'width', this.siblingOffset + offset + 'px');\n      });\n  }\n\n  @HostListener('mousedown', ['$event']) onMouseEnter(event: MouseEvent) {\n    this.isClicked = true;\n    this.parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n    this.siblingElement = this.renderer.nextSibling(this.parentElement);\n    this.pointerOffset = event.pageX;\n\n    this.parentOffset = this.parentElement.offsetWidth;\n    this.siblingOffset = this.siblingElement.offsetWidth;\n  }\n\n  @HostListener('document:mouseup') onMouseDown() {\n    this.isClicked = false;\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(null);\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {DataSource} from '../../../lib/data-source/data-source';\nimport {Column} from \"../../../lib/data-set/column\";\n\n@Component({\n  selector: '[angular2-st-thead-titles-row]',\n  template: `\n    <th *ngIf=\"isMultiSelectVisible\"\n        [style.width]=\"multiSelectWidth\"\n    >\n      <input type=\"checkbox\" [ngModel]=\"isAllSelected\" (click)=\"selectAllRows.emit()\">\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"angular2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.classHeader ?? ''\"\n        [style.width]=\"column.width\"\n    >\n      <angular2-st-column-title\n        [source]=\"source\"\n        [column]=\"column\"\n        [isHideable]=\"isHideable\"\n        (hide)=\"hide.emit($event)\"\n      ></angular2-st-column-title>\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n})\nexport class TheadTitlesRowComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() isAllSelected!: boolean;\n  @Input() source!: DataSource;\n\n  @Output() hide = new EventEmitter<any>();\n  @Output() selectAllRows = new EventEmitter<void>();\n\n  multiSelectWidth: string = '3rem';\n  isMultiSelectVisible!: boolean;\n  showActionColumnLeft!: boolean;\n  showActionColumnRight!: boolean;\n  isResizable!: boolean;\n  isHideable: boolean = false;\n\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.isResizable = this.grid.getSetting('resizable');\n    this.isHideable = this.grid.getSetting('hideable');\n  }\n\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\n    return (columns || []).filter((column: Column) => !column.hide);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl} from '@angular/platform-browser';\n\nexport type SecurityTrustType = 'html'|'style'|'script'|'url'|'resourceUrl'|'none';\n\n@Pipe({\n  name: 'bypassSecurityTrust'\n})\nexport class BypassSecurityTrustPipe implements PipeTransform {\n\n  constructor(protected sanitizer: DomSanitizer) {}\n\n  public transform(value: string, type: SecurityTrustType): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      case 'none': return value;\n    }\n  }\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {DataSource} from '../../../lib/data-source/data-source';\nimport {CreateEvent} from '../../../lib/events';\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n  selector: '[angular2-st-add-button]',\n  template: `\n    <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\n        [ngClass]=\"{'not-allowed': disabled}\"\n        [innerHTML]=\"addNewButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onAdd($event)\"></a>\n  `,\n})\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() source!: DataSource;\n  @Output() create = new EventEmitter<CreateEvent>();\n\n  hiddenWhenFunction: () => boolean = () => false;\n  disabledWhenFunction: () => boolean = () => false;\n  addNewButtonContent!: string;\n  bypassSecurityTrust: SecurityTrustType = 'none';\n\n  constructor(private ref: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('angular2-smart-actions-title', 'angular2-smart-actions-title-add');\n  }\n\n  get visible(): boolean {\n    return !this.hiddenWhenFunction();\n  }\n\n  get disabled(): boolean {\n    return this.disabledWhenFunction();\n  }\n\n  ngOnChanges() {\n    this.addNewButtonContent = this.grid.settings.add?.addButtonContent ?? 'Add';\n    this.bypassSecurityTrust = this.grid.settings.add?.sanitizer?.bypassHtml ? 'html' : 'none';\n\n    this.disabledWhenFunction = this.grid.settings.add?.disabledWhen ?? this.disabledWhenFunction;\n    const actions = this.grid.settings.actions;\n    if (actions === false || actions === undefined) {\n      this.hiddenWhenFunction = () => (actions === false);\n    } else {\n      this.hiddenWhenFunction = this.grid.settings.add?.hiddenWhen ?? (() => (actions.add === false));\n    }\n  }\n\n  onAdd(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.disabled) return;\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.create.emit({\n        source: this.source,\n      });\n    } else {\n      this.grid.createFormShown = true;\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\n\nimport {Column} from '../../lib/data-set/column';\nimport {DataSource} from '../../lib/data-source/data-source';\n\n@Component({\n  template: '',\n})\nexport class FilterDefault {\n\n  @Input() column!: Column;\n  @Input() source!: DataSource;\n  @Input() inputClass: string = '';\n\n  query: string = '';\n\n  onFilter(query: string) {\n    this.source.addFilter({\n      field: this.column.id,\n      search: query,\n      filter: this.column.getFilterFunction(),\n    });\n  }\n}\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild, ViewContainerRef} from '@angular/core';\n\nimport {FilterDefault} from './filter-default';\n\n@Component({\n  selector: 'custom-table-filter',\n  template: `<ng-template #dynamicTarget></ng-template>`,\n})\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\n  @Input() query!: string;\n  customComponent: any;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget!: ViewContainerRef;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.column && !this.customComponent) {\n      const filter = this.column.filter;\n      if (!filter) {\n        return;\n      }\n      this.customComponent = this.dynamicTarget.createComponent(filter.component);\n\n      // set @Inputs and @Outputs of custom component\n      this.customComponent.instance.query = this.query;\n      this.customComponent.instance.column = this.column;\n      this.customComponent.instance.source = this.source;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.filter.subscribe((event: any) => { this.onFilter(event)});\n    }\n    if (this.customComponent) {\n      this.customComponent.instance.ngOnChanges(changes);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {Column} from '../../../lib/data-set/column';\n\n@Component({\n  template: '',\n})\nexport class DefaultFilter implements Filter, OnDestroy {\n\n  delay: number = 300;\n  changesSubscription!: Subscription;\n  changesSubscription2!: Subscription;\n  @Input() query!: string;\n  @Input() inputClass!: string;\n  @Input() column!: Column;\n  @Output() filter = new EventEmitter<string>();\n\n  ngOnDestroy() {\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n    if (this.changesSubscription2) {\n      this.changesSubscription2.unsubscribe();\n    }\n  }\n\n  setFilter() {\n    this.filter.emit(this.query);\n  }\n}\n\nexport interface Filter {\n\n  delay?: number;\n  changesSubscription?: Subscription;\n  query: string;\n  inputClass: string;\n  column: Column;\n  filter: EventEmitter<string>;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged, skip} from 'rxjs/operators';\n\nimport {DefaultFilter} from './default-filter';\nimport {defaultStringEqualsFilter, defaultStringInclusionFilter} from \"../../../lib/data-source/local/local.filter\";\n\n@Component({\n  selector: 'select-filter',\n  template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n})\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\n\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl!: NgControl;\n\n  ngOnInit() {\n    this.column.filterFunction = this.onFilterValues.bind(this);\n\n    const exist = this.inputControl.valueChanges;\n    if (!exist) {\n      return;\n    }\n    exist\n      .pipe(\n        skip(1),\n        distinctUntilChanged(),\n        debounceTime(this.delay)\n      )\n      .subscribe((value: string) => this.setFilter());\n  }\n\n  onFilterValues(cellValue: string, search: string, data: any, cellName: string) {\n    const strictFilter = this.column.getFilterConfig()?.strict ?? false;\n    if (strictFilter) {\n      return defaultStringEqualsFilter(cellValue, search, data, cellName);\n    } else {\n      return defaultStringInclusionFilter(cellValue, search, data, cellName);\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {DefaultFilter} from './default-filter';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'checkbox-filter',\n  template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n})\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\n\n  filterActive: boolean = false;\n  inputControl = new FormControl();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.changesSubscription = this.inputControl.valueChanges\n      .pipe(debounceTime(this.delay))\n      .subscribe((checked: boolean) => {\n        this.filterActive = true;\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n        this.query = checked ? trueVal : falseVal;\n        this.setFilter();\n      });\n  }\n\n  resetFilter(event: any) {\n    event.preventDefault();\n    this.query = '';\n    this.inputControl.setValue(false, { emitEvent: false });\n    this.filterActive = false;\n    this.setFilter();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {CompleterService} from 'ng2-completer';\n\nimport {DefaultFilter} from './default-filter';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'completer-filter',\n  template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n})\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\n\n  completerContent = new Subject<any>();\n\n  constructor(private completerService: CompleterService) {\n    super();\n  }\n\n  ngOnInit() {\n    const config = this.column.getFilterConfig().completer;\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n    config.dataService.descriptionField(config.descriptionField);\n\n    this.changesSubscription = this.completerContent\n      .pipe(\n        map((ev: any) => (ev && ev.title) || ev || ''),\n        distinctUntilChanged(),\n        debounceTime(this.delay)\n      )\n      .subscribe((search: string) => {\n        this.query = search;\n        this.setFilter();\n      });\n  }\n\n  inputTextChanged(event: string) {\n    // workaround to trigger the search event when the home/end buttons are clicked\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n    // so here it gets called manually\n    if (event === '') {\n      this.completerContent.next(event);\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {DefaultFilter} from './default-filter';\nimport {combineLatest, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Component({\n    selector: 'date-filter',\n    template: `\n    <select [formControl]=\"filterTypeSelect\">\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\n    </select>\n    <div [ngSwitch]=\"filterType\">\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n    </div>\n  `,\n})\nexport class DateFilterComponent extends DefaultFilter implements OnInit {\n\n    startDate = new FormControl();\n    endDate = new FormControl();\n    dateBefore = new FormControl();\n    dateAfter = new FormControl();\n    dateEqual = new FormControl();\n    filterTypeSelect = new FormControl();\n    filterType: string = 'after';\n    filterOptions = ['before', 'after', 'equal', 'between'];\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n        this.changesSubscription2 = this.filterTypeSelect.valueChanges.subscribe(value => {\n            this.filterType = value\n            if (this.changesSubscription) {\n                this.changesSubscription.unsubscribe();\n            }\n            this.changesSubscription = this.getFilterType()\n                .subscribe((value: any) => {\n                    this.query = value;\n                    this.setFilter()\n                })\n        })\n    }\n\n    getFilterType() {\n        switch (this.filterType) {\n            case 'before': {\n                return this.dateBefore.valueChanges.pipe(map((value: any) => '_date_before_' + value));\n            }\n            case 'after': {\n                return this.dateAfter.valueChanges.pipe(map((value: any) => '_date_after_' + value));\n            }\n            case 'equal': {\n                return this.dateEqual.valueChanges.pipe(map((value: any) => '_date_equal_' + value));\n            }\n            case 'between': {\n                return combineLatest([this.startDate.valueChanges, this.endDate.valueChanges])\n                    .pipe(map(([val1, val2]) => {\n                        return '_start_date_' + val1 + '_end_date_' + val2\n                    }))\n            }\n            default:\n                return of('');\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {DefaultFilter} from './default-filter';\nimport {DropdownSettings} from 'angular2-multiselect-dropdown/lib/multiselect.interface';\nimport {defaultStringEqualsFilter, defaultStringInclusionFilter} from '../../../lib/data-source/local/local.filter';\n\nexport interface Config {\n    dropdownList: Array<any>,\n    selectedItems: Array<any>,\n    dropdownSettings: DropdownSettings\n}\n\n@Component({\n    selector: 'mselect-filter',\n    template: `<angular2-multiselect [data]=\"dropdownList\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onDeSelect)=\"OnItemDeSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\n    </angular2-multiselect>`\n})\nexport class MselectFilterComponent extends DefaultFilter implements OnInit {\n\n    readonly selector = \"*;*\";\n    dropdownList: Array<any> = [];\n    selectedItems: Array<any> = [];\n    dropdownSettings: DropdownSettings = {};\n\n    ngOnInit() {\n        this.column.filterFunction = this.onFilterValues.bind(this);\n        const config: Config = this.column.getFilterConfig();\n        this.dropdownList = config.dropdownList || [];\n        this.selectedItems = config.selectedItems || [];\n        let setting: DropdownSettings = {\n            singleSelection: false,\n            text: \"Select\",\n            selectAllText: \"Select All\",\n            unSelectAllText: 'UnSelect All',\n            enableSearchFilter: true,\n            classes: \"myclass\",\n            maxHeight: 200,\n            position: 'top',\n            autoPosition: true,\n        };\n        this.dropdownSettings = Object.assign(setting, config.dropdownSettings);\n    }\n\n    onFilterValues(cellValue: string, search: string, data: any, cellName: string) {\n        if (search.indexOf(this.selector) != -1) {\n            let searchArray = search.split(this.selector);\n            return searchArray.indexOf(cellValue) != -1;\n        }\n        const strictFilter = this.column.getFilterConfig()?.strict ?? false;\n        if (strictFilter) {\n            return defaultStringEqualsFilter(cellValue, search, data, cellName);\n        } else {\n            return defaultStringInclusionFilter(cellValue, search, data, cellName);\n        }\n    }\n\n    onItemSelect(item: any) {\n        this.updateQuery();\n    }\n    OnItemDeSelect(item: any) {\n        this.updateQuery();\n    }\n    onSelectAll(items: any) {\n        this.updateQuery();\n    }\n    onDeSelectAll(items: any) {\n        this.updateQuery();\n    }\n    updateQuery() {\n        this.query = this.selectedItems.map(item => item.id).join(this.selector);//.replace(/ /g, '')\n        this.setFilter()\n    }\n}\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\nimport {DefaultFilter} from './default-filter';\n\n@Component({\n  selector: 'input-filter',\n  template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\n  `,\n})\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\n\n  inputControl = new FormControl();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.query) {\n      this.inputControl.setValue(this.query);\n    }\n    this.inputControl.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(this.delay),\n      )\n      .subscribe((value: string) => {\n        this.query = this.inputControl.value;\n        this.setFilter();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.query) {\n      this.inputControl.setValue(this.query);\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\n\nimport {FilterDefault} from \"./filter-default\";\n\n@Component({\n  selector: 'default-table-filter',\n  template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <date-filter *ngSwitchCase=\"'date'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </date-filter>\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </mselect-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n})\nexport class DefaultFilterComponent extends FilterDefault {\n  @Input() query!: string;\n}\n","import {Component, OnChanges, SimpleChanges} from '@angular/core';\nimport {FilterDefault} from './filter-default';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'angular2-smart-table-filter',\n  styleUrls: ['./filter.component.scss'],\n  template: `\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n        ></custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n        ></default-table-filter>\n      </div>\n    `,\n})\nexport class FilterComponent extends FilterDefault implements OnChanges {\n  query: string = '';\n  protected dataChangedSub!: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        const filterConf = this.source.getFilter();\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n          this.query = '';\n\n          // add a check for existing filters an set the query if one exists for this column\n          // this covers instances where the filter is set by user code while maintaining existing functionality\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n          filterConf.filters.forEach((k: any, v: any) => {\n            if (k.field == this.column.id) {\n              this.query = k.search;\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {DataSource} from '../../../lib/data-source/data-source';\nimport {Column} from \"../../../lib/data-set/column\";\nimport {CreateEvent} from '../../../lib/events';\n\n@Component({\n  selector: '[angular2-st-thead-filters-row]',\n  template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\n      <angular2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n      ></angular2-smart-table-filter>\n    </th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n})\nexport class TheadFitlersRowComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() source!: DataSource;\n\n  @Output() create = new EventEmitter<CreateEvent>();\n\n  isMultiSelectVisible!: boolean;\n  showActionColumnLeft!: boolean;\n  showActionColumnRight!: boolean;\n  filterInputClass!: string;\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\n  }\n\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\n    return (columns || []).filter((column: Column) => !column.hide);\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {CreateCancelEvent, CreateConfirmEvent} from '../../../lib/events';\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n  // TODO: @breaking-change rename the selector to angular2-st-thead-create-cancel in the next major version\n  selector: 'angular2-st-actions',\n  template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCreate($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCancelCreate($event)\"></a>\n  `,\n})\nexport class TheadCreateCancelComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() createConfirm!: EventEmitter<CreateConfirmEvent>;\n  @Input() createCancel!: EventEmitter<CreateCancelEvent>;\n\n  createButtonContent!: string;\n  cancelButtonContent!: string;\n  bypassSecurityTrust: SecurityTrustType = 'none';\n\n  onCreate(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\n  }\n\n  onCancelCreate(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.grid.createFormShown = false;\n    this.createCancel.emit({\n      discardedData: this.grid.getNewRow().getNewData(),\n      source: this.grid.source,\n    });\n  }\n\n  ngOnChanges() {\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    this.bypassSecurityTrust = this.grid.settings.add?.sanitizer?.bypassHtml ? 'html' : 'none';\n  }\n}\n","import {Component, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef,} from '@angular/core';\n\nimport {Cell} from '../../../lib/data-set/cell';\nimport {ViewCell} from './view-cell';\n\n@Component({\n  selector: 'custom-view-component',\n  template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n})\nexport class CustomViewComponent implements OnInit, OnDestroy {\n\n  customComponent: any;\n  @Input() cell!: Cell;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget!: ViewContainerRef;\n\n  ngOnInit() {\n    if (this.cell && !this.customComponent) {\n      this.customComponent = this.dynamicTarget.createComponent(this.cell.getColumn().renderComponent);\n      Object.assign(this.customComponent.instance, this.getPatch());\n      const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n      onComponentInitFunction && onComponentInitFunction(this.customComponent.instance, this.getPatch());\n    }\n  }\n\n  ngOnDestroy() {\n    this.customComponent.destroy();\n  }\n\n  protected getPatch(): ViewCell {\n    return {\n      value: this.cell.getValue(),\n      rowData: this.cell.getRow().getData()\n    }\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\n\nimport {Cell} from '../../../lib/data-set/cell';\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n  selector: 'table-cell-view-mode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue() | bypassSecurityTrust: bypassSecurityTrust\" [ngClass]=\"cssClass\"></div>\n        <div *ngSwitchDefault [ngClass]=\"cssClass\">{{ cell.getValue() }}</div>\n    </div>\n    `,\n})\nexport class ViewCellComponent {\n\n  @Input() cell!: Cell;\n\n  get bypassSecurityTrust(): SecurityTrustType {\n    return this.cell.getColumn().sanitizer.bypassHtml ? 'html' : 'none';\n  }\n\n  get cssClass(): string {\n    return this.cell.getColumn().classContent ?? ''\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\nimport {Cell} from '../../../lib/data-set/cell';\n\n@Component({\n  template: ''\n})\nexport class EditCellDefault {\n\n  @Input() cell!: Cell;\n  @Input() inputClass: string = '';\n\n  @Output() edited = new EventEmitter<void>();\n  @Output() stopEditing = new EventEmitter<void>();\n\n  onEdited(): boolean {\n    this.edited.emit();\n    return false;\n  }\n\n  onStopEditing(): boolean {\n    this.stopEditing.emit();\n    return false;\n  }\n\n  onClick(event: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n","import {Component, OnChanges, OnDestroy, SimpleChanges, ViewChild, ViewContainerRef,} from '@angular/core';\n\nimport {EditCellDefault} from './edit-cell-default';\n\n@Component({\n  selector: 'table-cell-custom-editor',\n  template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n})\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\n\n  customComponent: any;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget!: ViewContainerRef;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.cell && !this.customComponent) {\n      const editor = this.cell.getColumn().editor;\n      if (!editor) return;\n      this.customComponent = this.dynamicTarget.createComponent(editor.component);\n\n      // set @Inputs and @Outputs of custom component\n      this.customComponent.instance.cell = this.cell;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n      this.customComponent.instance.onEdited.subscribe(() => this.onEdited());\n      this.customComponent.instance.onClick.subscribe((event: MouseEvent) => this.onClick(event));\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\nimport {Cell} from '../../../lib/data-set/cell';\n\n@Component({\n  template: '',\n})\nexport class DefaultEditor implements Editor {\n  @Input() cell!: Cell;\n  @Input() inputClass!: string;\n\n  @Output() onStopEditing = new EventEmitter<void>();\n  @Output() onEdited = new EventEmitter<void>();\n  @Output() onClick = new EventEmitter<MouseEvent>();\n\n  get disableEnterKeySave(): boolean {\n    return this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().disableEnterKeySave;\n  }\n}\n\nexport interface Editor {\n  cell: Cell;\n  inputClass: string;\n  onStopEditing: EventEmitter<void>;\n  onEdited: EventEmitter<void>;\n  onClick: EventEmitter<MouseEvent>;\n}\n","import {Component} from '@angular/core';\n\nimport {DefaultEditor} from './default-editor';\n\n@Component({\n  selector: 'select-editor',\n  template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [value]=\"cell.newValue\"\n            (change)=\"onSelectionChanged($any($event.target).value)\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getRawValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n})\nexport class SelectEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n\n  onSelectionChanged(newValue: string) {\n    this.cell.newValue = newValue;\n  }\n}\n","import {Component} from '@angular/core';\n\nimport {DefaultEditor} from './default-editor';\n\n@Component({\n  selector: 'textarea-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `,\n})\nexport class TextareaEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n}\n","import {Component} from '@angular/core';\n\nimport {DefaultEditor} from './default-editor';\n\n@Component({\n  selector: 'checkbox-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `,\n})\nexport class CheckboxEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n\n  onChange(event: any) {\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CompleterService} from 'ng2-completer';\n\nimport {DefaultEditor} from './default-editor';\n\n@Component({\n  selector: 'completer-editor',\n  template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"completerConfig.dataService\"\n                   [minSearchLength]=\"completerConfig.minSearchLength || 0\"\n                   [pause]=\"completerConfig.pause || 0\"\n                   [placeholder]=\"completerConfig.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n})\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\n\n  completerConfig: any; // TODO: we need a proper type for this\n  completerStr: string = '';\n\n  constructor(private completerService: CompleterService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.completerStr = this.cell.getRawValue(); // initialize with current value\n    const config = this.completerConfig = this.cell.getColumn().getConfig().completer;\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n    config.dataService.descriptionField(config.descriptionField);\n  }\n\n  onEditedCompleter(event: any): boolean {\n    this.cell.newValue = event.title;\n    return false;\n  }\n}\n","import {Component} from '@angular/core';\n\nimport {DefaultEditor} from './default-editor';\n\n@Component({\n  selector: 'input-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `,\n})\nexport class InputEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n}\n","import {Component} from '@angular/core';\n\nimport {EditCellDefault} from './edit-cell-default';\n\n@Component({\n  selector: 'table-cell-default-editor',\n  templateUrl: './default-edit.component.html',\n})\nexport class DefaultEditComponent extends EditCellDefault {\n\n  constructor() {\n    super();\n  }\n\n  getEditorType(): string {\n    const editor = this.cell.getColumn().editor\n    if (!editor) {\n      return 'default';\n    }\n    return editor.type;\n  }\n}\n","<div [ngSwitch]=\"getEditorType()\">\n    <select-editor *ngSwitchCase=\"'list'\"\n                   [cell]=\"cell\"\n                   [inputClass]=\"inputClass\"\n                   (onClick)=\"onClick($event)\"\n                   (onEdited)=\"onEdited()\"\n                   (onStopEditing)=\"onStopEditing()\">\n    </select-editor>\n\n    <textarea-editor *ngSwitchCase=\"'textarea'\"\n                     [cell]=\"cell\"\n                     [inputClass]=\"inputClass\"\n                     (onClick)=\"onClick($event)\"\n                     (onEdited)=\"onEdited()\"\n                     (onStopEditing)=\"onStopEditing()\">\n    </textarea-editor>\n\n    <checkbox-editor *ngSwitchCase=\"'checkbox'\"\n                     [cell]=\"cell\"\n                     [inputClass]=\"inputClass\"\n                     (onClick)=\"onClick($event)\">\n    </checkbox-editor>\n\n    <completer-editor *ngSwitchCase=\"'completer'\"\n                      [cell]=\"cell\">\n    </completer-editor>\n\n    <input-editor *ngSwitchDefault\n                  [cell]=\"cell\"\n                  [inputClass]=\"inputClass\"\n                  (onClick)=\"onClick($event)\"\n                  (onEdited)=\"onEdited()\"\n                  (onStopEditing)=\"onStopEditing()\">\n    </input-editor>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nimport {Cell} from '../../../lib/data-set/cell';\n\n@Component({\n  selector: 'table-cell-edit-mode',\n  template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"edited.emit()\"\n                                  (stopEditing)=\"stopEditing.emit()\"\n        ></table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                   [cell]=\"cell\"\n                                   [inputClass]=\"inputClass\"\n                                   (edited)=\"edited.emit()\"\n                                   (stopEditing)=\"stopEditing.emit()\"\n        ></table-cell-default-editor>\n      </div>\n    `,\n})\nexport class EditCellComponent implements OnInit {\n\n  @Input() cell!: Cell;\n  @Input() inputClass: string = '';\n\n  @Output() edited = new EventEmitter<void>();\n  @Output() stopEditing = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.cell.resetValue();\n  }\n\n  getEditorType(): string {\n    const editor = this.cell.getColumn().editor\n    if (!editor) {\n      return 'default';\n    }\n    return editor.type;\n  }\n}\n","import {Component, EventEmitter, Input} from '@angular/core';\n\nimport {Grid} from '../../lib/grid';\nimport {Cell} from '../../lib/data-set/cell';\nimport {Row} from '../../lib/data-set/row';\nimport {CreateCancelEvent, CreateConfirmEvent, EditCancelEvent, EditConfirmEvent} from '../../lib/events';\n\n@Component({\n  selector: 'angular2-smart-table-cell',\n  template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited()\"\n                          (stopEditing)=\"onStopEditing()\"\n    ></table-cell-edit-mode>\n  `,\n})\nexport class CellComponent {\n\n  @Input() grid!: Grid;\n  @Input() row!: Row;\n  @Input() cell!: Cell;\n  @Input() inputClass: string = '';\n  @Input() mode: string = 'inline';\n  @Input() isInEditing: boolean = false;\n  @Input() isNew!: boolean;\n  // if isNew === false\n  @Input() editConfirm!: EventEmitter<EditConfirmEvent>;\n  @Input() editCancel!: EventEmitter<EditCancelEvent>;\n  // if isNew === true\n  @Input() createConfirm!: EventEmitter<CreateConfirmEvent>;\n  @Input() createCancel!: EventEmitter<CreateCancelEvent>;\n\n  onEdited() {\n    if (this.isNew) {\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    } else {\n      this.grid.save(this.row, this.editConfirm);\n    }\n  }\n\n  onStopEditing() {\n    if (this.isNew) {\n      this.grid.createFormShown = false;\n      this.createCancel.emit({\n        discardedData: this.grid.getNewRow().getNewData(),\n        source: this.grid.source,\n      });\n    } else {\n      this.row.isInEditing = false;\n      this.editCancel.emit({\n        data: this.row.getData(),\n        discardedData: this.row.getNewData(),\n        source: this.grid.source,\n      });\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {Row} from '../../../lib/data-set/row';\nimport {Cell} from '../../../lib/data-set/cell';\nimport {CreateCancelEvent, CreateConfirmEvent} from '../../../lib/events';\n\n@Component({\n  selector: '[angular2-st-thead-form-row]',\n  template: `\n    <td *ngIf=\"isMultiSelectVisible\"></td>\n    <td *ngIf=\"showActionColumnLeft\" class=\"angular2-smart-actions\">\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\n    </td>\n    <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n      <angular2-smart-table-cell\n        [cell]=\"cell\"\n        [grid]=\"grid\"\n        [isNew]=\"true\"\n        [createConfirm]=\"createConfirm\"\n        [createCancel]=\"createCancel\"\n        [inputClass]=\"addInputClass\"\n        [isInEditing]=\"grid.getNewRow().isInEditing\"\n      ></angular2-smart-table-cell>\n    </td>\n    <td *ngIf=\"showActionColumnRight\" class=\"angular2-smart-actions\">\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\n    </td>\n  `,\n})\nexport class TheadFormRowComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() row!: Row;\n  @Input() createConfirm!: EventEmitter<CreateConfirmEvent>;\n  @Input() createCancel!: EventEmitter<CreateCancelEvent>;\n\n  isMultiSelectVisible!: boolean;\n  showActionColumnLeft!: boolean;\n  showActionColumnRight!: boolean;\n  addInputClass!: string;\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.addInputClass = this.grid.getSetting('add.inputClass');\n  }\n\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\n  }\n}\n","import {Component, EventEmitter, HostListener, Input, OnChanges, Output} from '@angular/core';\n\nimport {Grid} from '../../lib/grid';\nimport {DataSource} from '../../lib/data-source/data-source';\nimport {TableService} from '../../services/table.service';\nimport {CreateCancelEvent, CreateConfirmEvent, CreateEvent} from '../../lib/events';\n\n@Component({\n  selector: '[angular2-st-thead]',\n  styleUrls: ['./thead.component.scss'],\n  templateUrl: './thead.component.html',\n})\nexport class NgxSmartTableTheadComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() source!: DataSource;\n  @Input() isAllSelected!: boolean;\n  @Input() createConfirm!: EventEmitter<CreateConfirmEvent>;\n  @Input() createCancel!: EventEmitter<CreateCancelEvent>;\n\n  @Output() hide = new EventEmitter<string>();\n  @Output() selectAllRows = new EventEmitter<void>();\n  @Output() create = new EventEmitter<CreateEvent>();\n\n  isHideHeader!: boolean;\n  isHideSubHeader!: boolean;\n\n  constructor(private tableService: TableService) {\n  }\n\n  ngOnChanges() {\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n  }\n\n  @HostListener('mousemove', ['$event'])\n  mouseMove(event: MouseEvent) {\n    this.tableService.mouseMoveEvent$.next(event);\n  }\n}\n","<tr angular2-st-thead-titles-row *ngIf=\"!isHideHeader\"\n    class=\"angular2-smart-titles\"\n    [grid]=\"grid\"\n    [isAllSelected]=\"isAllSelected\"\n    [source]=\"source\"\n    (hide)=\"hide.emit($event)\"\n    (selectAllRows)=\"selectAllRows.emit()\"\n></tr>\n\n<tr angular2-st-thead-filters-row *ngIf=\"!isHideSubHeader\"\n    class=\"angular2-smart-filters\"\n    [grid]=\"grid\"\n    [source]=\"source\"\n    (create)=\"create.emit($event)\"\n></tr>\n\n<tr angular2-st-thead-form-row *ngIf=\"grid.createFormShown\"\n    [grid]=\"grid\"\n    [createConfirm]=\"createConfirm\"\n    [createCancel]=\"createCancel\"\n></tr>\n","import {Component, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\nimport {Row} from '../../../lib/data-set/row';\nimport {CustomAction} from '../../../lib/settings';\n\n@Component({\n  selector: 'angular2-st-tbody-custom-item',\n  template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n})\nexport class TbodyCustomItemComponent implements OnInit, OnDestroy {\n\n  customComponent: any;\n  @Input() action!: CustomAction;\n  @Input() row!: Row;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget!: ViewContainerRef;\n\n  ngOnInit() {\n    this.customComponent = this.dynamicTarget.createComponent(this.action.renderComponent);\n    Object.assign(this.customComponent.instance, this.getPatch());\n  }\n\n  ngOnDestroy() {\n    this.customComponent.destroy();\n  }\n\n  protected getPatch() {\n    return {\n      action: this.action,\n      rowData: this.row.getData(),\n    };\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Row} from '../../../lib/data-set/row';\n\nimport {Grid} from '../../../lib/grid';\nimport {CustomAction} from '../../../lib/settings';\nimport {CustomActionEvent} from '../../../lib/events';\n\n@Component({\n  selector: 'angular2-st-tbody-custom',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngFor=\"let action of customActions\">\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"!action.renderComponent\"\n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"action.renderComponent\"\n         (click)=\"onCustom(action, $event)\">\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n                                  [action]=\"action\"\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\n      </a>\n\n    </ng-container>\n  `,\n})\nexport class TbodyCustomComponent {\n\n  @Input() grid!: Grid;\n  @Input() row!: Row;\n  @Input() source: any;\n  @Output() custom = new EventEmitter<CustomActionEvent>();\n\n  get customActions(): CustomAction[] {\n    return this.grid.getSetting('actions.custom') ?? [];\n  }\n\n  onCustom(action: CustomAction, event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.custom.emit({\n      action: action.name,\n      row: this.row,\n      data: this.row.getData(),\n      source: this.source,\n    });\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output} from \"@angular/core\";\nimport {Row} from \"../../../lib/data-set/row\";\nimport {Grid} from \"../../../lib/grid\";\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n    selector: 'angular2-st-tbody-expand',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n      <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\n         [ngClass]=\"{'not-allowed': disabled}\"\n         [innerHTML]=\"buttonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onExpand($event)\"></a>\n    `,\n  })\n  export class TbodyExpandRowComponent implements OnChanges {\n\n    @Input() grid!: Grid;\n    @Input() row!: Row;\n\n    @Output() onExpandRow = new EventEmitter<any>();\n\n    buttonContent!: string;\n    bypassSecurityTrust: SecurityTrustType = 'none';\n\n    hiddenWhenFunction: (row: Row) => boolean = (_) => false;\n    disabledWhenFunction: (row: Row) => boolean = (_) => false;\n\n    constructor(){\n    }\n\n    get visible(): boolean {\n      return !this.hiddenWhenFunction(this.row);\n    }\n\n    get disabled(): boolean {\n      return this.disabledWhenFunction(this.row);\n    }\n\n    onExpand(event: any) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.disabled) {\n          this.onExpandRow.emit(this.row);\n        }\n    }\n\n\n    ngOnChanges() {\n        this.buttonContent = this.grid.settings.expand?.buttonContent ?? this.grid.settings.expand?.expandRowButtonContent ?? 'Expand';\n        this.bypassSecurityTrust = this.grid.settings.expand?.sanitizer?.bypassHtml ? 'html' : 'none';\n\n        this.hiddenWhenFunction = this.grid.settings.expand?.hiddenWhen ?? this.hiddenWhenFunction;\n        this.disabledWhenFunction = this.grid.settings.expand?.disabledWhen ?? this.disabledWhenFunction;\n    }\n  }\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {Row} from '../../../lib/data-set/row';\nimport {DataSource} from '../../../lib/data-source/data-source';\nimport {DeleteConfirmEvent, DeleteEvent, EditEvent} from '../../../lib/events';\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n  selector: 'angular2-st-tbody-edit-delete',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <a href=\"#\" *ngIf=\"editVisible\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\n       [ngClass]=\"{'not-allowed': editDisabled}\"\n       [innerHTML]=\"editRowButtonContent | bypassSecurityTrust: editButtonBypassSecurityTrust\"\n       (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"deleteVisible\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\n       [ngClass]=\"{'not-allowed': deleteDisabled}\"\n       [innerHTML]=\"deleteRowButtonContent | bypassSecurityTrust: deleteButtonBypassSecurityTrust\" (click)=\"onDelete($event)\"></a>\n  `,\n})\nexport class TbodyEditDeleteComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() row!: Row;\n  @Input() source!: DataSource;\n  @Input() deleteConfirm!: EventEmitter<DeleteConfirmEvent>;\n\n  @Output() edit = new EventEmitter<EditEvent>();\n  @Output() delete = new EventEmitter<DeleteEvent>();\n  @Output() editRowSelect = new EventEmitter<any>();\n\n  editRowButtonContent!: string;\n  editButtonBypassSecurityTrust: SecurityTrustType = 'none';\n  editHiddenWhenFunction: (row: Row) => boolean = (_) => false;\n  editDisabledWhenFunction: (row: Row) => boolean = (_) => false;\n  deleteHiddenWhenFunction: (row: Row) => boolean = (_) => false;\n  deleteDisabledWhenFunction: (row: Row) => boolean = (_) => false;\n  deleteRowButtonContent!: string;\n  deleteButtonBypassSecurityTrust: SecurityTrustType = 'none';\n\n  onEdit(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.editDisabled) return;\n\n    this.editRowSelect.emit(this.row);\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.edit.emit({\n        row: this.row,\n        data: this.row.getData(),\n        source: this.source,\n      });\n    } else {\n      this.grid.edit(this.row);\n    }\n  }\n\n  onDelete(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.deleteDisabled) return;\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.delete.emit({\n        row: this.row,\n        data: this.row.getData(),\n        source: this.source,\n      });\n    } else {\n      this.grid.delete(this.row, this.deleteConfirm);\n    }\n  }\n\n  get editVisible(): boolean {\n    return !this.editHiddenWhenFunction(this.row);\n  }\n\n  get editDisabled(): boolean {\n    return this.editDisabledWhenFunction(this.row);\n  }\n\n  get deleteVisible(): boolean {\n    return !this.deleteHiddenWhenFunction(this.row);\n  }\n\n  get deleteDisabled(): boolean {\n    return this.deleteDisabledWhenFunction(this.row);\n  }\n\n  ngOnChanges() {\n    const actions = this.grid.settings.actions;\n    if (actions === false || actions === undefined) {\n      // handle the \"flexibility\" of this property....\n      this.editHiddenWhenFunction = (_) => (actions === false);\n      this.deleteHiddenWhenFunction = (_) => (actions === false);\n      return;\n    }\n\n    this.editRowButtonContent = this.grid.settings.edit?.editButtonContent ?? 'Edit';\n    this.editButtonBypassSecurityTrust = this.grid.settings.edit?.sanitizer?.bypassHtml ? 'html' : 'none';\n    this.editHiddenWhenFunction = this.grid.settings.edit?.hiddenWhen ?? ((_) => (actions.edit === false));\n    this.editDisabledWhenFunction = this.grid.settings.edit?.disabledWhen ?? this.editDisabledWhenFunction;\n    this.deleteRowButtonContent = this.grid.settings.delete?.deleteButtonContent ?? 'Delete';\n    this.deleteButtonBypassSecurityTrust = this.grid.settings.delete?.sanitizer?.bypassHtml ? 'html' : 'none';\n    this.deleteHiddenWhenFunction = this.grid.settings.delete?.hiddenWhen ?? ((_) => (actions.delete === false));\n    this.deleteDisabledWhenFunction = this.grid.settings.delete?.disabledWhen ?? this.deleteDisabledWhenFunction;\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges} from '@angular/core';\n\nimport {Grid} from '../../../lib/grid';\nimport {Row} from '../../../lib/data-set/row';\nimport {EditCancelEvent, EditConfirmEvent} from '../../../lib/events';\nimport {SecurityTrustType} from '../../../pipes/bypass-security-trust.pipe';\n\n@Component({\n  // TODO: @breaking-change rename the selector to angular2-st-tbody-save-cancel in the next major version\n  selector: 'angular2-st-tbody-create-cancel',\n  template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n})\nexport class TbodySaveCancelComponent implements OnChanges {\n\n  @Input() grid!: Grid;\n  @Input() row!: Row;\n  @Input() editConfirm!: EventEmitter<EditConfirmEvent>;\n  @Input() editCancel!: EventEmitter<EditCancelEvent>;\n\n  cancelButtonContent!: string;\n  saveButtonContent!: string;\n  bypassSecurityTrust: SecurityTrustType = 'none';\n\n  onSave(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.grid.save(this.row, this.editConfirm);\n  }\n\n  onCancelEdit(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.row.isInEditing = false;\n    this.editCancel.emit({\n      data: this.row.getData(),\n      discardedData: this.row.getNewData(),\n      source: this.grid.source,\n    });\n  }\n\n  ngOnChanges() {\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\n    this.bypassSecurityTrust = this.grid.settings.edit?.sanitizer?.bypassHtml ? 'html' : 'none';\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\n\nimport {Grid} from '../../lib/grid';\nimport {DataSource} from '../../lib/data-source/data-source';\nimport {Cell} from '../../lib/data-set/cell';\nimport {delay} from 'rxjs/operators';\nimport {Row} from '../../lib/data-set/row';\nimport {\n  CustomActionEvent,\n  DeleteConfirmEvent,\n  DeleteEvent,\n  EditCancelEvent,\n  EditConfirmEvent,\n  EditEvent\n} from '../../lib/events';\n\n@Component({\n  selector: '[angular2-st-tbody]',\n  styleUrls: ['./tbody.component.scss'],\n  templateUrl: './tbody.component.html',\n})\nexport class NgxSmartTableTbodyComponent implements AfterViewInit, OnDestroy {\n\n  @Input() grid!: Grid;\n  @Input() source!: DataSource;\n  @Input() deleteConfirm!: EventEmitter<DeleteConfirmEvent>;\n  @Input() editConfirm!: EventEmitter<EditConfirmEvent>;\n  @Input() editCancel!: EventEmitter<EditCancelEvent>;\n  @Input() rowClassFunction!: Function;\n\n  @Output() edit = new EventEmitter<EditEvent>();\n  @Output() delete = new EventEmitter<DeleteEvent>();\n  @Output() custom = new EventEmitter<CustomActionEvent>();\n\n  @Output() userSelectRow = new EventEmitter<Row>();\n  @Output() editRowSelect = new EventEmitter<Row>();\n  @Output() multipleSelectRow = new EventEmitter<Row>();\n  @Output() rowHover = new EventEmitter<Row>();\n  @Output() onExpandRow = new EventEmitter<Row>();\n\n  @ViewChildren('expandedRowChild', { read: ViewContainerRef }) expandedRowChild!: QueryList<ViewContainerRef>;\n\n  expandedRowComponent: any;\n  hasChildComponent: boolean = false;\n\n  ngAfterViewInit(): void {\n    let cmp = this.getExpandedRowComponentFromSettings();\n    if (cmp && !this.expandedRowComponent) {\n      this.expandedRowChild.forEach(c => c.clear());\n      this.hasChildComponent = true;\n      this.createCustomComponent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.expandedRowComponent) this.expandedRowComponent.destroy();\n  }\n\n  private getExpandedRowComponentFromSettings(): any {\n    return this.grid.settings.expand?.component ?? this.grid.settings.expandedRowComponent;\n  }\n\n  protected createCustomComponent() {\n    let cmp = this.getExpandedRowComponentFromSettings();\n    if (cmp) {\n      this.expandedRowChild.changes\n        .pipe(delay(0))\n        .subscribe((list: QueryList<ViewContainerRef>) => {\n          if (list.length) {\n            this.expandedRowComponent = list.first.createComponent(cmp);\n            Object.assign(this.expandedRowComponent.instance, this.grid.dataSet.expandRow, {\n              rowData: this.grid.dataSet.getExpandedRow().getData(),\n            });\n          }\n        });\n    }\n  }\n\n  isMultiSelectVisible!: boolean;\n  showActionColumnLeft!: boolean;\n  showActionColumnRight!: boolean;\n  mode!: string;\n  editInputClass!: string;\n  isActionAdd!: boolean;\n  isActionEdit!: boolean;\n  isActionDelete!: boolean;\n  noDataMessage!: boolean;\n\n  get tableColumnsCount() {\n    const actionColumn = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n    const selectColumn = this.isMultiSelectVisible ? 1 : 0;\n    return this.grid.getColumns().length + actionColumn + selectColumn;\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.mode = this.grid.getSetting('mode');\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.isActionAdd = this.grid.getSetting('actions.add');\n    this.isActionEdit = this.grid.getSetting('actions.edit');\n    this.isActionDelete = this.grid.getSetting('actions.delete');\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\n  }\n\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\n  }\n\n  onExpandRowClick(row: Row) {\n    this.onExpandRow.emit(row);\n  }\n}\n","<ng-container  *ngFor=\"let row of grid.getRows()\">\n  <tr (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"angular2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\n    <td *ngIf=\"isMultiSelectVisible\" class=\"angular2-smart-actions angular2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\n      <input type=\"checkbox\" class=\"form-check-input\" [ngModel]=\"row.isSelected\">\n    </td>\n    <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"angular2-smart-actions\">\n\n      <angular2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\">\n      </angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\"\n                                [row]=\"row\"\n                                [source]=\"source\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n    <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n    <td *ngFor=\"let cell of getVisibleCells(row.cells)\">\n      <angular2-smart-table-cell [cell]=\"cell\"\n                            [grid]=\"grid\"\n                            [row]=\"row\"\n                            [isNew]=\"false\"\n                            [mode]=\"mode\"\n                            [editConfirm]=\"editConfirm\"\n                            [editCancel]=\"editCancel\"\n                            [inputClass]=\"editInputClass\"\n                            [isInEditing]=\"row.isInEditing\">\n      </angular2-smart-table-cell>\n    </td>\n\n    <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"angular2-smart-actions\">\n      <angular2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\" [editCancel]=\"editCancel\"></angular2-st-tbody-create-cancel>\n    </td>\n\n    <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"angular2-smart-actions\">\n      <angular2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></angular2-st-tbody-custom>\n\n      <angular2-st-tbody-expand\n          *ngIf=\"hasChildComponent\"\n          [grid]=\"grid\"\n          [row]=\"row\"\n          (onExpandRow)=\"onExpandRow.emit(row)\">\n      </angular2-st-tbody-expand>\n\n      <angular2-st-tbody-edit-delete [grid]=\"grid\"\n                                [deleteConfirm]=\"deleteConfirm\"\n                                [row]=\"row\"\n                                [source]=\"source\"\n                                (edit)=\"edit.emit($event)\"\n                                (delete)=\"delete.emit($event)\"\n                                (editRowSelect)=\"editRowSelect.emit($event)\">\n      </angular2-st-tbody-edit-delete>\n    </td>\n  </tr>\n  <tr class=\"angular2-smart-row angular2-smart-row-detail\" *ngIf=\"row.isExpanded\">\n    <td [attr.colspan]=\"tableColumnsCount\" class=\"angular2-smart-column-expandedDetail\">\n      <ng-template #expandedRowChild ></ng-template>\n    </td>\n  </tr>\n</ng-container>\n<tr *ngIf=\"grid.getRows().length == 0\">\n  <td [attr.colspan]=\"tableColumnsCount\">\n    {{ noDataMessage }}\n  </td>\n</tr>\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DataSource} from '../../lib/data-source/data-source';\n\n@Component({\n  selector: 'angular2-smart-table-pager',\n  styleUrls: ['./pager.component.scss'],\n  template: `\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\n      <ul class=\"angular2-smart-pagination pagination\">\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"angular2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"angular2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n\n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <div *ngIf=\"!shouldShow()\"><!-- placeholder to consume the space of the page selection --></div>\n\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\n      <label for=\"per-page\" *ngIf=\"perPageSelectLabel\">{{perPageSelectLabel}}</label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `,\n})\nexport class PagerComponent implements OnChanges {\n\n  @Input() source!: DataSource;\n  @Input() perPageSelect!: number[];\n  @Input() perPageSelectLabel!: string;\n\n  currentPerPage!: any;\n\n  protected pages!: Array<any>;\n  protected page!: number;\n  protected count: number = 0;\n  protected perPage!: number;\n\n  protected dataChangedSub!: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        this.page = this.source.getPaging().page;\n        this.perPage = this.source.getPaging().perPage;\n        this.currentPerPage = this.perPage;\n        this.count = this.source.count();\n        if (this.isPageOutOfBounce()) {\n          this.source.setPage(--this.page);\n        }\n\n        this.processPageChange(dataChanges);\n        this.initPages();\n      });\n    }\n  }\n\n  /**\n   * We change the page here depending on the action performed against data source\n   * if a new element was added to the end of the table - then change the page to the last\n   * if a new element was added to the beginning of the table - then to the first page\n   * @param changes\n   */\n  processPageChange(changes: any) {\n    if (changes.action === 'prepend') {\n      this.source.setPage(1);\n    }\n    if (changes.action === 'append') {\n      this.source.setPage(this.getLast());\n    }\n  }\n\n  shouldShow(): boolean {\n    return this.source.count() > this.perPage;\n  }\n\n  paginate(page: number): boolean {\n    this.source.setPage(page);\n    this.page = page;\n    return false;\n  }\n\n  next(): boolean {\n    return this.paginate(this.getPage() + 1);\n  }\n\n  prev(): boolean {\n    return this.paginate(this.getPage() - 1);\n  }\n\n  getPage(): number {\n    return this.page;\n  }\n\n  getPages(): Array<any> {\n    return this.pages;\n  }\n\n  getLast(): number {\n    return Math.ceil(this.count / this.perPage);\n  }\n\n  isPageOutOfBounce(): boolean {\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n  }\n\n  initPages() {\n    const pagesCount = this.getLast();\n    let showPagesCount = 4;\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n    this.pages = [];\n\n    if (this.shouldShow()) {\n\n      let middleOne = Math.ceil(showPagesCount / 2);\n      middleOne = this.page >= middleOne ? this.page : middleOne;\n\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n\n      const firstOne = lastOne - showPagesCount + 1;\n\n      for (let i = firstOne; i <= lastOne; i++) {\n        this.pages.push(i);\n      }\n    }\n  }\n\n  onChangePerPage(event: any) {\n    if (this.currentPerPage) {\n      this.source.getPaging().perPage = this.currentPerPage * 1;\n      this.source.refresh();\n      this.initPages();\n    }\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChange} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {DataSet} from './lib/data-set/data-set';\nimport {Row} from './lib/data-set/row';\nimport {DataSource, DataSourceChangeEvent} from './lib/data-source/data-source';\nimport {LocalDataSource} from './lib/data-source/local/local.data-source';\nimport {Grid} from './lib/grid';\nimport {deepExtend, getPageForRowIndex} from './lib/helpers';\nimport {IColumn, Settings} from './lib/settings';\nimport {\n  CreateCancelEvent,\n  CreateConfirmEvent,\n  CreateEvent,\n  CustomActionEvent,\n  DeleteConfirmEvent,\n  DeleteEvent,\n  EditCancelEvent,\n  EditConfirmEvent,\n  EditEvent,\n  RowSelectionEvent,\n} from './lib/events';\n\n@Component({\n  selector: 'angular2-smart-table',\n  styleUrls: ['./angular2-smart-table.component.scss'],\n  templateUrl: './angular2-smart-table.component.html',\n})\nexport class Angular2SmartTableComponent implements OnChanges, OnDestroy {\n\n  @Input() source: any;\n  @Input() settings: Settings = {};\n\n  @Output() rowSelect = new EventEmitter<RowSelectionEvent>();\n  @Output() userRowSelect = new EventEmitter<RowSelectionEvent>();\n  @Output() delete = new EventEmitter<DeleteEvent>();\n  @Output() edit = new EventEmitter<EditEvent>();\n  @Output() create = new EventEmitter<CreateEvent>();\n  @Output() custom = new EventEmitter<CustomActionEvent>();\n  @Output() deleteConfirm = new EventEmitter<DeleteConfirmEvent>();\n  @Output() editConfirm = new EventEmitter<EditConfirmEvent>();\n  @Output() editCancel = new EventEmitter<EditCancelEvent>();\n  @Output() createConfirm = new EventEmitter<CreateConfirmEvent>();\n  @Output() createCancel = new EventEmitter<CreateCancelEvent>();\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\n  @Output() afterGridInit: EventEmitter<DataSet> = new EventEmitter<DataSet>();\n\n  dataChangeSubscription?: Subscription;\n\n  tableClass!: string;\n  tableId!: string;\n  perPageSelect: number[] = [];\n  perPageSelectLabel: string = 'Per Page:';\n  isHideHeader!: boolean;\n  isHideSubHeader!: boolean;\n  isPagerDisplay!: boolean;\n  rowClassFunction!: Function;\n\n  grid!: Grid;\n  defaultSettings: Settings = {\n    mode: 'inline', // inline|external\n    selectMode: 'single', // single|multi|multi_filtered\n    /**\n     * Points to an element in all data\n     *\n     * when < 0 all lines must be deselected\n     */\n    selectedRowIndex: 0,\n    switchPageToSelectedRowPage: false,\n    hideHeader: false,\n    hideSubHeader: false,\n    resizable: false,\n    hideable: false,\n    actions: {\n      columnTitle: 'Actions',\n      add: true,\n      edit: true,\n      delete: true,\n      custom: [],\n      position: 'left', // left|right\n    },\n    filter: {\n      inputClass: '',\n    },\n    edit: {\n      inputClass: '',\n      editButtonContent: 'Edit',\n      saveButtonContent: 'Update',\n      cancelButtonContent: 'Cancel',\n      confirmSave: false,\n    },\n    add: {\n      inputClass: '',\n      addButtonContent: 'Add New',\n      createButtonContent: 'Create',\n      cancelButtonContent: 'Cancel',\n      confirmCreate: false,\n    },\n    delete: {\n      deleteButtonContent: 'Delete',\n      confirmDelete: false,\n    },\n    expand: {\n      buttonContent: 'Expand'\n    },\n    attr: {\n      id: '',\n      class: '',\n    },\n    noDataMessage: 'No data found',\n    columns: {},\n    pager: {\n      display: true,\n      page: 1,\n      perPage: 10,\n    },\n    rowClassFunction: () => '',\n  };\n\n  isAllSelected: boolean = false;\n\n  private onSelectRowSubscription!: Subscription;\n  private onDeselectRowSubscription!: Subscription;\n  private destroyed$: Subject<void> = new Subject<void>();\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (this.grid) {\n      if (changes['settings']) {\n        this.grid.setSettings(this.prepareSettings());\n      }\n      if (changes['source']) {\n        this.source = this.prepareSource();\n        this.grid.setSource(this.source);\n      }\n    } else {\n      this.initGrid();\n    }\n    this.tableId = this.grid.getSetting('attr.id');\n    this.tableClass = this.grid.getSetting('attr.class');\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect', this.perPageSelect);\n    this.perPageSelectLabel = this.grid.getSetting('pager.perPageSelectLabel', this.perPageSelectLabel);\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n  }\n\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\n    if (!this.grid) {\n      return;\n    }\n    this.grid.settings.selectedRowIndex = index;\n    if (this.isIndexOutOfRange(index)) {\n      // we need to deselect all rows if we got an incorrect index\n      this.grid.dataSet.deselectAll();\n      this.emitSelectRow(null);\n      return;\n    }\n\n    if (switchPageToSelectedRowPage) {\n      const source: DataSource = this.source;\n      const paging: { page: number, perPage: number } = source.getPaging();\n      const page: number = getPageForRowIndex(index, paging.perPage);\n      index = index % paging.perPage;\n      this.grid.settings.selectedRowIndex = index;\n\n      if (page !== paging.page) {\n        source.setPage(page);\n        return;\n      }\n\n    }\n\n    const row: Row = this.grid.getRows()[index];\n    if (row) {\n      this.grid.selectRow(row);\n      this.emitSelectRow(row);\n    }\n  }\n\n  onEditRowSelect(row: Row) {\n    if (this.grid.getSetting('selectMode') === 'single') {\n      this.grid.selectRow(row);\n      this.emitSelectRow(row);\n    }\n  }\n\n  onUserSelectRow(row: Row) {\n    if (this.grid.getSetting('selectMode') === 'single') {\n      this.grid.selectRow(row);\n      this.emitUserSelectRow(row);\n    }\n  }\n\n  onRowHover(row: Row) {\n    this.rowHover.emit(row);\n  }\n\n  onMultipleSelectRow(row: Row) {\n    this.grid.multipleSelectRow(row);\n    // TODO: currently we make our life easy and just deselect the \"select all\" checkbox when needed\n    //       but we do not check it, when we determine that the user has selected everything\n    if (!row.isSelected) this.isAllSelected = false;\n    this.emitUserSelectRow(row);\n  }\n\n  async onSelectAllRows() {\n    this.isAllSelected = !this.isAllSelected;\n    await this.grid.selectAllRows(this.isAllSelected);\n    this.emitUserSelectRow(null);\n  }\n\n  onExpandRow(row: Row) {\n    this.grid.expandRow(row);\n  }\n\n  initGrid() {\n    this.source = this.prepareSource();\n    this.grid = new Grid(this.source, this.prepareSettings());\n\n    this.subscribeToOnSelectRow();\n    /** Delay a bit the grid init event trigger to prevent empty rows */\n    setTimeout(() => {\n      this.afterGridInit.emit(this.grid.dataSet);\n    }, 10);\n\n  }\n\n  prepareSource(): DataSource {\n    let source: DataSource;\n    if (this.source instanceof DataSource) {\n      source = this.source;\n    } else if (this.source instanceof Array) {\n      source = new LocalDataSource(this.source);\n    } else {\n      source = new LocalDataSource();\n    }\n\n    // we have to hook up a listener to update some variables when the data source changes\n    if (this.dataChangeSubscription) this.dataChangeSubscription.unsubscribe();\n    this.dataChangeSubscription = source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\n\n    return source;\n  }\n\n  processDataChange(changes: DataSourceChangeEvent): void {\n    // here we can already assume that the source has been lifted to an instance of DataSource\n    const source = this.source as DataSource;\n    this.isAllSelected = source.isEveryElementSelected(this.grid.getSetting('selectMode') === 'multi_filtered')\n  }\n\n  prepareSettings(): Settings {\n    return deepExtend({}, this.defaultSettings, this.settings);\n  }\n\n  getNotVisibleColumns(): Array<IColumn> {\n    return (this.grid?.getColumns() ?? []).filter((column: IColumn) => column.hide);\n  }\n\n  onShowHeader(columnId: string) {\n    (this.settings as any).columns[columnId].hide = false;\n    this.grid.setSettings(this.prepareSettings());\n  }\n\n  onHideHeader(columnId: string) {\n    (this.settings as any).columns[columnId].hide = true;\n    this.grid.setSettings(this.prepareSettings());\n  }\n\n  private createRowSelectionEvent(row: Row | null): RowSelectionEvent {\n    return {\n      row: row,\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n      selected: this.grid.getSelectedItems(),\n    };\n  }\n\n  private emitUserSelectRow(row: Row | null) {\n    this.userRowSelect.emit(this.createRowSelectionEvent(row));\n    // always also emit the general event\n    this.emitSelectRow(row);\n  }\n\n  private emitSelectRow(row: Row | null) {\n    this.rowSelect.emit(this.createRowSelectionEvent(row));\n  }\n\n  private isIndexOutOfRange(index: number): boolean {\n    const dataAmount = this.source?.count();\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n  }\n\n  private subscribeToOnSelectRow(): void {\n    if (this.onSelectRowSubscription) {\n      this.onSelectRowSubscription.unsubscribe();\n    }\n    this.onSelectRowSubscription = this.grid.onSelectRow()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((row) => {\n        this.emitSelectRow(row);\n      });\n  }\n}\n","<angular2-smart-table-tags-list\n  [tags]=\"getNotVisibleColumns()\" (close)=\"onShowHeader($event)\"\n></angular2-smart-table-tags-list>\n\n<div style=\"overflow-x: auto; -webkit-overflow-scrolling: touch\">\n  <table [id]=\"tableId\" [ngClass]=\"tableClass\">\n    <thead\n      angular2-st-thead\n      *ngIf=\"!isHideHeader || !isHideSubHeader\"\n      [grid]=\"grid\"\n      [isAllSelected]=\"isAllSelected\"\n      [source]=\"source\"\n      [createConfirm]=\"createConfirm\"\n      [createCancel]=\"createCancel\"\n      (create)=\"create.emit($event)\"\n      (selectAllRows)=\"onSelectAllRows()\"\n      (hide)=\"onHideHeader($event)\"\n    ></thead>\n\n    <tbody\n      angular2-st-tbody\n      [grid]=\"grid\"\n      [source]=\"source\"\n      [deleteConfirm]=\"deleteConfirm\"\n      [editConfirm]=\"editConfirm\"\n      [editCancel]=\"editCancel\"\n      [rowClassFunction]=\"rowClassFunction\"\n      (edit)=\"edit.emit($event)\"\n      (delete)=\"delete.emit($event)\"\n      (custom)=\"custom.emit($event)\"\n      (userSelectRow)=\"onUserSelectRow($event)\"\n      (editRowSelect)=\"onEditRowSelect($event)\"\n      (multipleSelectRow)=\"onMultipleSelectRow($event)\"\n      (onExpandRow)=\"onExpandRow($event)\"\n      (rowHover)=\"onRowHover($event)\"\n    ></tbody>\n  </table>\n</div>\n<angular2-smart-table-pager\n  *ngIf=\"isPagerDisplay\"\n  [source]=\"source\"\n  [perPageSelect]=\"perPageSelect\"\n  [perPageSelectLabel]=\"perPageSelectLabel\"\n>\n</angular2-smart-table-pager>\n","import {NgModule} from '@angular/core';\nimport {BypassSecurityTrustPipe} from './bypass-security-trust.pipe';\n\nconst PIPES = [\n  BypassSecurityTrustPipe,\n];\n\n@NgModule({\n  declarations: [...PIPES],\n  exports: [...PIPES],\n})\nexport class PipesModule {\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Ng2CompleterModule} from 'ng2-completer';\n\nimport {CellComponent} from './cell.component';\nimport {CustomEditComponent} from './cell-edit-mode/custom-edit.component';\nimport {DefaultEditComponent} from './cell-edit-mode/default-edit.component';\nimport {EditCellComponent} from './cell-edit-mode/edit-cell.component';\nimport {CheckboxEditorComponent} from './cell-editors/checkbox-editor.component';\nimport {CompleterEditorComponent} from './cell-editors/completer-editor.component';\nimport {InputEditorComponent} from './cell-editors/input-editor.component';\nimport {SelectEditorComponent} from './cell-editors/select-editor.component';\nimport {TextareaEditorComponent} from './cell-editors/textarea-editor.component';\nimport {CustomViewComponent} from './cell-view-mode/custom-view.component';\nimport {ViewCellComponent} from './cell-view-mode/view-cell.component';\nimport {EditCellDefault} from './cell-edit-mode/edit-cell-default';\nimport {DefaultEditor} from './cell-editors/default-editor';\nimport {PipesModule} from '../../pipes/pipes.module';\n\nconst CELL_COMPONENTS = [\n  CellComponent,\n  EditCellDefault,\n  DefaultEditor,\n  CustomEditComponent,\n  DefaultEditComponent,\n  EditCellComponent,\n  CheckboxEditorComponent,\n  CompleterEditorComponent,\n  InputEditorComponent,\n  SelectEditorComponent,\n  TextareaEditorComponent,\n  CustomViewComponent,\n  ViewCellComponent,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        Ng2CompleterModule,\n        PipesModule,\n    ],\n  declarations: [\n    ...CELL_COMPONENTS,\n  ],\n  exports: [\n    ...CELL_COMPONENTS,\n  ],\n})\nexport class CellModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Ng2CompleterModule} from 'ng2-completer';\n\nimport {FilterComponent} from './filter.component';\nimport {DefaultFilterComponent} from \"./default-filter.component\";\nimport {CustomFilterComponent} from \"./custom-filter.component\";\nimport {CheckboxFilterComponent} from './filter-types/checkbox-filter.component';\nimport {CompleterFilterComponent} from './filter-types/completer-filter.component';\nimport {InputFilterComponent} from './filter-types/input-filter.component';\nimport {SelectFilterComponent} from './filter-types/select-filter.component';\nimport {DefaultFilter} from './filter-types/default-filter';\nimport {FilterDefault} from './filter-default';\nimport {DateFilterComponent} from './filter-types/date-filter.component';\nimport {MselectFilterComponent} from './filter-types/mselect-filter.component';\nimport {AngularMultiSelectModule} from 'angular2-multiselect-dropdown';\n\nconst FILTER_COMPONENTS = [\n  FilterDefault,\n  DefaultFilter,\n  FilterComponent,\n  DateFilterComponent,\n  DefaultFilterComponent,\n  CustomFilterComponent,\n  CheckboxFilterComponent,\n  CompleterFilterComponent,\n  InputFilterComponent,\n  SelectFilterComponent,\n  MselectFilterComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2CompleterModule,\n    AngularMultiSelectModule\n  ],\n  declarations: [\n    ...FILTER_COMPONENTS,\n  ],\n  exports: [\n    ...FILTER_COMPONENTS,\n  ],\n})\nexport class FilterModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {PagerComponent} from './pager.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    PagerComponent,\n  ],\n  exports: [\n    PagerComponent,\n  ],\n})\nexport class PagerModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TagComponent} from './tag/tag.component';\nimport {TagsListComponent} from './tags-list/tags-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TagComponent,\n    TagsListComponent\n  ],\n  exports: [\n    TagComponent,\n    TagsListComponent\n  ],\n})\nexport class TabsModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {CellModule} from '../cell/cell.module';\n\nimport {NgxSmartTableTbodyComponent} from './tbody.component';\nimport {TbodySaveCancelComponent} from './cells/save-cancel.component';\nimport {TbodyEditDeleteComponent} from './cells/edit-delete.component';\nimport {TbodyCustomComponent} from './cells/custom.component';\nimport {TbodyExpandRowComponent} from './cells/expand.component';\nimport {TbodyCustomItemComponent} from './cells/custom-item.component';\nimport {PipesModule} from '../../pipes/pipes.module';\n\nconst TBODY_COMPONENTS = [\n  TbodySaveCancelComponent,\n  TbodyEditDeleteComponent,\n  TbodyCustomComponent,\n  TbodyExpandRowComponent,\n  TbodyCustomItemComponent,\n  NgxSmartTableTbodyComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        CellModule,\n        PipesModule,\n    ],\n  declarations: [\n    ...TBODY_COMPONENTS,\n  ],\n  exports: [\n    ...TBODY_COMPONENTS,\n  ],\n})\nexport class TBodyModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgxResizerDirective} from './resizer.directive';\n\nconst DIRECTIVES = [\n  NgxResizerDirective\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ...DIRECTIVES,\n  ],\n  exports: [\n    ...DIRECTIVES,\n  ],\n})\nexport class DirectivesModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {FilterModule} from '../filter/filter.module';\nimport {CellModule} from '../cell/cell.module';\n\nimport {NgxSmartTableTheadComponent} from './thead.component';\nimport {TheadCreateCancelComponent} from './cells/create-cancel.component';\nimport {ActionsTitleComponent} from './cells/actions-title.component';\nimport {AddButtonComponent} from './cells/add-button.component';\nimport {ColumnTitleComponent} from './cells/column-title.component';\nimport {TitleComponent} from './cells/title/title.component';\nimport {TheadFitlersRowComponent} from './rows/thead-filters-row.component';\nimport {TheadFormRowComponent} from './rows/thead-form-row.component';\nimport {TheadTitlesRowComponent} from './rows/thead-titles-row.component';\nimport {DirectivesModule} from '../../directives/directives.module';\nimport {PipesModule} from '../../pipes/pipes.module';\n\nconst THEAD_COMPONENTS = [\n  TheadCreateCancelComponent,\n  ActionsTitleComponent,\n  AddButtonComponent,\n  ColumnTitleComponent,\n  TitleComponent,\n  TheadFitlersRowComponent,\n  TheadFormRowComponent,\n  TheadTitlesRowComponent,\n  NgxSmartTableTheadComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule,\n        DirectivesModule,\n        PipesModule\n    ],\n  declarations: [\n    ...THEAD_COMPONENTS,\n  ],\n  exports: [\n    ...THEAD_COMPONENTS,\n  ],\n})\nexport class THeadModule { }\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Angular2SmartTableComponent} from './angular2-smart-table.component';\nimport {CellModule} from './components/cell/cell.module';\nimport {FilterModule} from './components/filter/filter.module';\nimport {PagerModule} from './components/pager/pager.module';\nimport {TabsModule} from './components/tags/tags.module';\nimport {TBodyModule} from './components/tbody/tbody.module';\nimport {THeadModule} from './components/thead/thead.module';\n\n\n@NgModule({\n  declarations: [\n    Angular2SmartTableComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CellModule,\n    FilterModule,\n    PagerModule,\n    TBodyModule,\n    THeadModule,\n    TabsModule\n  ],\n  exports: [\n    Angular2SmartTableComponent\n  ]\n})\nexport class Angular2SmartTableModule { }\n","export class ServerSourceConf {\n\n  protected static readonly SORT_FIELD_KEY = '_sort';\n  protected static readonly SORT_DIR_KEY = '_order';\n  protected static readonly PAGER_PAGE_KEY = '_page';\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\n  protected static readonly TOTAL_KEY = 'x-total-count';\n  protected static readonly DATA_KEY = '';\n\n  endPoint: string;\n\n  sortFieldKey: string;\n  sortDirKey: string;\n  pagerPageKey: string;\n  pagerLimitKey: string;\n  filterFieldKey: string;\n  totalKey: string;\n  dataKey: string;\n\n  constructor(\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n\n    this.endPoint = endPoint ? endPoint : '';\n\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n  }\n}\n","import {HttpClient, HttpParams} from '@angular/common/http';\nimport {lastValueFrom, Observable} from 'rxjs';\n\nimport {LocalDataSource} from '../local/local.data-source';\nimport {ServerSourceConf} from './server-source.conf';\nimport {getDeepFromObject} from '../../helpers';\n\nimport {map} from 'rxjs/operators';\n\nexport class ServerDataSource extends LocalDataSource {\n\n  protected conf: ServerSourceConf;\n\n  protected lastRequestCount: number = 0;\n\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\n    super();\n\n    this.conf = new ServerSourceConf(conf);\n\n    if (!this.conf.endPoint) {\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n    }\n  }\n\n  override count(): number {\n    return this.lastRequestCount;\n  }\n\n  override getAll(): Promise<any> {\n    return this.loadData(false, false, false);\n  }\n\n  override getElements(): Promise<any> {\n    return this.loadData(true, true, true);\n  }\n\n  override getFilteredAndSorted(): Promise<any> {\n    return this.loadData(true, true, false);\n  }\n\n  protected loadData(filtered: boolean, sorted: boolean, paginated: boolean): Promise<any> {\n    return lastValueFrom(this.requestElements(filtered, sorted, paginated)\n      .pipe(map(res => {\n        this.lastRequestCount = this.extractTotalFromResponse(res);\n        // TODO: the following two lines are obviously incorrect\n        //       but whoever hacked this ServerDataSource into the project did not think about compatibility to the interface\n        this.data = this.extractDataFromResponse(res);\n        this.filteredAndSorted = this.data;\n        return this.data;\n      })));\n  }\n\n  /**\n   * Extracts array of data from server response\n   * @param res\n   * @returns {any}\n   */\n  protected extractDataFromResponse(res: any): Array<any> {\n    const rawData = res.body;\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n\n    if (data instanceof Array) {\n      return data;\n    }\n\n    throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n  }\n\n  /**\n   * Extracts total rows count from the server response\n   * Looks for the count in the heders first, then in the response body\n   * @param res\n   * @returns {any}\n   */\n  protected extractTotalFromResponse(res: any): number {\n    if (res.headers.has(this.conf.totalKey)) {\n      return +res.headers.get(this.conf.totalKey);\n    } else {\n      const rawData = res.body;\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\n    }\n  }\n\n  protected requestElements(filtered: boolean, sorted: boolean, paginated: boolean): Observable<any> {\n    let httpParams = new HttpParams();\n\n    if (filtered) httpParams = this.addFilterRequestParams(httpParams);\n    if (sorted) httpParams = this.addSortRequestParams(httpParams);\n    if (paginated) httpParams = this.addPagerRequestParams(httpParams);\n\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n  }\n\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\n    if (this.sortConf) {\n      let fields: string[] = [];\n      let directions: string[] = [];\n      this.sortConf.forEach((fieldConf) => {\n        if (fieldConf.direction !== null) {\n          fields.push(fieldConf.field);\n          directions.push(fieldConf.direction.toUpperCase());\n        }\n      });\n      httpParams = httpParams.set(this.conf.sortFieldKey, fields.join(','));\n      httpParams = httpParams.set(this.conf.sortDirKey, directions.join(','));\n    }\n\n    return httpParams;\n  }\n\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\n\n    if (this.filterConf.filters) {\n      this.filterConf.filters.forEach((fieldConf: any) => {\n        if (fieldConf['search']) {\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n        }\n      });\n    }\n\n    return httpParams;\n  }\n\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\n    httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\n    httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\n    return httpParams;\n  }\n}\n","/*\n * Public API Surface of angular2-smart-table\n */\n\nexport * from './lib/angular2-smart-table.module';\nexport { ViewCell } from './lib/components/cell/cell-view-mode/view-cell';\nexport { DefaultEditor, Editor } from './lib/components/cell/cell-editors/default-editor';\nexport { DefaultFilter, Filter } from './lib/components/filter/filter-types/default-filter'\nexport { Cell } from './lib/lib/data-set/cell';\nexport { Row } from './lib/lib/data-set/row';\nexport { DataSet } from './lib/lib/data-set/data-set';\nexport { LocalDataSource } from './lib/lib/data-source/local/local.data-source';\nexport { ServerDataSource } from './lib/lib/data-source/server/server.data-source';\nexport * from './lib/lib/data-source/data-source'\nexport * from './lib/angular2-smart-table.component';\nexport * from './lib/lib/settings';\nexport * from './lib/lib/events';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.TagComponent","i1","i1.TitleComponent","i1.TableService","i1.ActionsTitleComponent","i2.ColumnTitleComponent","i3","i4","i5.NgxResizerDirective","i2.BypassSecurityTrustPipe","i2","i1.SelectFilterComponent","i2.CheckboxFilterComponent","i3.CompleterFilterComponent","i4.DateFilterComponent","i5.MselectFilterComponent","i6.InputFilterComponent","i7","i1.CustomFilterComponent","i2.DefaultFilterComponent","i1.AddButtonComponent","i2.FilterComponent","i1.BypassSecurityTrustPipe","i1.CustomViewComponent","i3.BypassSecurityTrustPipe","i1.SelectEditorComponent","i2.TextareaEditorComponent","i3.CheckboxEditorComponent","i4.CompleterEditorComponent","i5.InputEditorComponent","i6","i1.CustomEditComponent","i2.DefaultEditComponent","i1.ViewCellComponent","i2.EditCellComponent","i1.TheadCreateCancelComponent","i2.CellComponent","i2.TheadTitlesRowComponent","i3.TheadFitlersRowComponent","i4.TheadFormRowComponent","i5","i1.TbodyCustomItemComponent","i1.TbodyCustomComponent","i2.TbodyExpandRowComponent","i3.TbodyEditDeleteComponent","i4.TbodySaveCancelComponent","i5.CellComponent","i1.TagsListComponent","i2.NgxSmartTableTheadComponent","i3.NgxSmartTableTbodyComponent","i4.PagerComponent"],"mappings":"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"}